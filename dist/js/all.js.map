{"version":3,"sources":["main.js","action-response.js","ajax.js","alerts.js","auth.js","buttons.js","confirm.js","csrf.js","dependencies.js","dom-helpers.js","dropzone.js","form-restore.js","form-stages.js","links.js","loader.js","nav.js","utilities.js","controls/content-dialog.js","controls/error-dialog.js","validation/custom-validators.js","validation/form-validation.js","validation/parsley-config.js","validation/validation-messages.js","components/chart/js/chart.js","components/chart/js/geo-chart.js","components/chart/js/graph-chart.js","components/chart/js/pie-chart.js","components/form/js/label.js","components/form/js/stages.js","components/form/js/submit.js","components/form/js/validation.js","components/field/checkbox-group/script.js","components/field/checkbox/script.js","components/field/colour/script.js","components/field/date-or-time/script.js","components/field/dropzone/script.js","components/field/inner-form/script.js","components/field/inner-module/script.js","components/field/list-of-fields/script.js","components/field/money/script.js","components/field/map/script.js","components/field/multiselect/script.js","components/field/number/script.js","components/field/radio-group/script.js","components/field/select/script.js","components/field/string/script.js","components/field/table-of-fields/script.js","components/field/textarea/script.js","components/field/wysiwyg/script.js","components/table/js/reorder.js","components/table/js/table.js","components/widget/js/action.js","package/module/dashboard/js/file-tree.js"],"names":[],"mappingsrnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxzjNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACppJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACntBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnlMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfntjxKA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnzxvfile":"all.js","sourcesContent":["window.Dms = {\n    config: {\n        // @see /resources/views/partials/js-config.blade.php\n    },\n    global: {\n        initialize: function (element) {\n            $.each(Dms.global.initializeCallbacks, function (index, callback) {\n                callback(element);\n            });\n        },\n        initializeCallbacks: []\n    },\n    action: {\n        responseHandler: null // @see ./services/action-response.js\n    },\n    alerts: {\n        add: null // @see ./services/alerts.js\n    },\n    csrf: {\n        initialize: function (csrfToken) {\n            Dms.config.csrf.token = csrfToken;\n\n            $.each(Dms.csrf.initializeCallbacks, function (index, callback) {\n                callback(csrfToken);\n            });\n        },\n        initializeCallbacks: []\n        // @see ./services/csrf.js\n    },\n    ajax: {\n        interceptors: []\n        // @see ./services/ajax.js\n    },\n    link: {\n        // @see ./services/links.js\n    },\n    auth: {\n        // @see ./services/auth.js\n    },\n    form: {\n        initialize: function (element) {\n            var callbacks = Dms.form.initializeCallbacks.concat(Dms.form.initializeValidationCallbacks);\n\n            $.each(callbacks, function (index, callback) {\n                callback(element);\n            });\n        },\n        stages: {}, // @see ./services/form-stages.js\n        validation: {}, // @see ./services/validation/form-validation.js\n        initializeCallbacks: [],\n        initializeValidationCallbacks: []\n    },\n    table: {\n        initialize: function (element) {\n            $.each(Dms.table.initializeCallbacks, function (index, callback) {\n                callback(element);\n            });\n        },\n        initializeCallbacks: []\n    },\n    chart: {\n        initialize: function (element) {\n            $.each(Dms.chart.initializeCallbacks, function (index, callback) {\n                callback(element);\n            });\n        },\n        initializeCallbacks: []\n    },\n    widget: {\n        initialize: function (element) {\n            $.each(Dms.widget.initializeCallbacks, function (index, callback) {\n                callback(element);\n            });\n        },\n        initializeCallbacks: []\n    },\n    all: {\n        initialize: function (element) {\n            Dms.csrf.initialize(Dms.config.csrf.token);\n            Dms.global.initialize(element);\n            Dms.form.initialize(element);\n            Dms.table.initialize(element);\n            Dms.chart.initialize(element);\n            Dms.widget.initialize(element);\n        }\n    },\n    loader: {}, // @see ./services/loader.js,\n    utilities: {}, // @see ./services/utilities.js\n    controls: {} // @see ./services/controls/*.js\n};\n\n$(document).ready(function () {\n    Dms.all.initialize($(document));\n});","Dms.action.responseHandler = function (httpStatusCode, actionUrl, response) {\n    if (typeof response.redirect !== 'undefined') {\n        if (typeof response.message !== 'undefined') {\n            Cookies.set('dms-flash-alert', {\n                message: response.message,\n                type: response.message_type || 'success'\n            });\n        }\n\n        Dms.link.goToUrl(response.redirect);\n        return;\n    }\n\n    if (typeof response.message !== 'undefined') {\n        Dms.alerts.add(response.message_type || 'success', response.message);\n    }\n\n    if (typeof response.files !== 'undefined') {\n        var fileNames = [];\n\n\n        $.each(response.files, function (index, file) {\n            fileNames.push(file.name);\n        });\n\n\n        swal({\n            html: true,\n            title: \"Downloading files\",\n            text: \"Please wait while your download begins.\\r\\n Files: \" + fileNames.join(', '),\n            type: \"info\",\n            showConfirmButton: false,\n            showLoaderOnConfirm: true\n        });\n\n        $.each(response.files, function (index, file) {\n            $('<iframe />')\n                .attr('src', Dms.config.routes.downloadFile(file.token))\n                .css('display', 'none')\n                .appendTo($(document.body));\n        });\n\n        var downloadsBegun = 0;\n        var checkIfDownloadsHaveBegun = function () {\n\n            $.each(response.files, function (index, file) {\n                var fileCookieName = 'file-download-' + file.token;\n\n                if (Cookies.get(fileCookieName)) {\n                    downloadsBegun++;\n                    Cookies.remove(fileCookieName)\n                }\n            });\n\n            if (downloadsBegun < response.files.length) {\n                setTimeout(checkIfDownloadsHaveBegun, 100);\n            } else {\n                swal.close();\n            }\n        };\n\n        checkIfDownloadsHaveBegun();\n    }\n\n    if (typeof response.content !== 'undefined') {\n        var title = response.content_title || '';\n\n        Dms.controls.showContentDialog(title, response.content, !!response.iframe);\n    }\n};","Dms.ajax.formData = function (form) {\n    var formValues = {};\n    var nativeFormData = new FormData(form);\n\n    this.getNativeFormData = function () {\n        return nativeFormData;\n    };\n\n    this.append = function (name, value, filename) {\n        if (typeof formValues[name] === 'undefined') {\n            formValues[name] = [];\n        }\n\n        formValues[name].push({\n            value: value,\n            filename: filename\n        });\n\n        if (typeof filename !== 'undefined') {\n            nativeFormData.append(name, value, filename);\n        } else {\n            nativeFormData.append(name, value);\n        }\n\n        return nativeFormData;\n    };\n\n    this.getFormValues = function () {\n        return formValues;\n    };\n\n    this.toQueryString = function () {\n        var params = [];\n\n        $.each(formValues, function (name, entries) {\n            $.each(entries, function (index, entry) {\n                params.push({name: name, value: entry.value});\n            });\n        });\n\n        return $.param(params);\n    };\n};\n\nDms.ajax.createFormData = function (form) {\n    return new Dms.ajax.formData(form);\n};\n\nDms.ajax.convertResponse = function (dataType, response) {\n    if (dataType === 'json') {\n        return JSON.parse(response);\n    } else if (dataType === 'xml') {\n        return $.parseXML(dataType);\n    }\n\n    return response;\n};\n\nDms.ajax.parseData = function (data) {\n    if (typeof data === 'undefined' || data === null) {\n        return [];\n    }\n\n    if (data instanceof Dms.ajax.formData) {\n        return data.getFormValues();\n    }\n\n    var dataMap = {};\n\n    var queryString = $.param(data);\n\n    if (queryString === '') {\n        return dataMap;\n    }\n\n    $.each(queryString.split('&'), function (index, parameter) {\n        var parts = parameter.split('=');\n        var name = decodeURIComponent(parts[0].replace(/\\+/g, '%20'));\n        if (typeof dataMap[name] === 'undefined') {\n            dataMap[name] = [];\n        }\n\n        dataMap[name].push({value: decodeURIComponent(parts[1].replace(/\\+/g, '%20'))});\n    });\n\n    return dataMap;\n};\n\nDms.ajax.createRequest = function (options) {\n    var originalOptions = $.extend(true, {}, options);\n    var filteredInterceptors = [];\n\n    $.each(Dms.ajax.interceptors, function (index, interceptor) {\n        if (typeof interceptor.accepts !== 'function' || interceptor.accepts(options)) {\n            filteredInterceptors.push(interceptor);\n        }\n    });\n\n    $.each(filteredInterceptors, function (index, interceptor) {\n        if (typeof interceptor.before === 'function') {\n            interceptor.before(options);\n        }\n    });\n\n    var optionsAfterBeforeFilters = $.extend(true, {}, options);\n    var areHandlersCanceled = false;\n\n    var callAfterInterceptors = function (response, data) {\n        $.each(filteredInterceptors.reverse(), function (index, interceptor) {\n            if (typeof interceptor.after === 'function') {\n\n                var returnValue = interceptor.after(optionsAfterBeforeFilters, response, data);\n\n                if (typeof returnValue !== 'undefined') {\n                    data = returnValue;\n                }\n            }\n        });\n\n        return data;\n    };\n\n    var handleLoggedOutDueToSessionExpiry = function (response) {\n        if (Dms.auth.isLoggedOut(response)) {\n            areHandlersCanceled = true;\n\n            Dms.auth.handleActionWhenLoggedOut(function () {\n                var newRequest = Dms.ajax.createRequest(originalOptions);\n\n                $.each(doneCallbacks, function (index, callback) {\n                    newRequest.done(callback);\n                });\n\n                $.each(failCallbacks, function (index, callback) {\n                    newRequest.fail(callback);\n                });\n\n                $.each(alwaysCallbacks, function (index, callback) {\n                    newRequest.always(callback);\n                });\n            });\n        }\n    };\n\n    var responseData;\n\n    var originalErrorCallback = options.error;\n    options.error = function (jqXHR, textStatus, errorThrown) {\n        handleLoggedOutDueToSessionExpiry(jqXHR);\n\n        if (areHandlersCanceled) {\n            return;\n        }\n        \n        callAfterInterceptors(jqXHR);\n\n        if (originalErrorCallback) {\n            return originalErrorCallback.apply(this, arguments);\n        }\n    };\n\n    var originalSuccessCallback = options.success;\n    options.success = function (data, textStatus, jqXHR) {\n        responseData = data = callAfterInterceptors(jqXHR, data);\n\n        if (areHandlersCanceled) {\n            return;\n        }\n\n        if (originalSuccessCallback) {\n            return originalSuccessCallback.apply(this, [data, textStatus, jqXHR]);\n        }\n    };\n\n    if (options.data instanceof Dms.ajax.formData) {\n        options.data = options.data.getNativeFormData();\n    }\n\n    var request = $.ajax(options);\n\n    var doneCallbacks = [];\n    var failCallbacks = [];\n    var alwaysCallbacks = [];\n\n    var originalDone = request.done;\n    request.done = function (callback) {\n        if (!callback) {\n            return;\n        }\n\n        doneCallbacks.push(callback);\n\n        originalDone(function (data, textStatus, jqXHR) {\n\n            if (areHandlersCanceled) {\n                return;\n            }\n\n            callback(responseData, textStatus, jqXHR);\n        });\n    };\n\n    var originalFail = request.fail;\n    request.fail = function (callback) {\n        if (!callback) {\n            return;\n        }\n\n        originalFail(function () {\n            failCallbacks.push(callback);\n\n            if (areHandlersCanceled) {\n                return;\n            }\n\n            callback.apply(this, arguments);\n        });\n    };\n\n    var originalAlways = request.always;\n    request.always = function (callback) {\n        if (!callback) {\n            return;\n        }\n\n        originalAlways(function () {\n            alwaysCallbacks.push(callback);\n\n            if (areHandlersCanceled) {\n                return;\n            }\n\n            callback.apply(this, arguments);\n        });\n    };\n\n    return request;\n};\n\n","Dms.alerts.add = function (type, title, message, timeout) {\n    var alertsList = $('.alerts-list');\n    var templates = alertsList.find('.alert-templates');\n\n\n    var alert = templates.find('.alert.alert-' + type).clone(true);\n\n    if (!message) {\n        var typeTitle = type.charAt(0).toUpperCase() + type.slice(1);\n\n        alert.find('.alert-title').text(typeTitle);\n        alert.find('.alert-message').text(title);\n    } else {\n        alert.find('.alert-title').text(title);\n        alert.find('.alert-message').text(message);\n    }\n\n    alertsList.append(alert.hide());\n    alert.fadeIn();\n\n    setTimeout(function () {\n        if (alert.is(':visible')) {\n            alert.fadeOut();\n        }\n    }, timeout || 10000);\n};\n\nDms.global.initializeCallbacks.push(function () {\n    var flashMessage = Cookies.getJSON('dms-flash-alert');\n\n    if (flashMessage) {\n        Cookies.remove('dms-flash-alert');\n\n        Dms.alerts.add(flashMessage.type, flashMessage.message);\n    }\n});","Dms.auth.isLoggedOut = function (response) {\n    return response.status === 401 && response.responseText.toLowerCase() === 'unauthenticated';\n};\n\nDms.auth.handleActionWhenLoggedOut = function (loggedInCallback) {\n    var loginFormUrl = Dms.config.routes.loginUrl;\n    var loginDialog = $('.dms-login-dialog');\n    var loginDialogContainer = loginDialog.parent();\n    var loginFormContainer = loginDialog.find('.dms-login-form-container');\n    var loginForm = loginFormContainer.find('.dms-login-form');\n\n    loginDialog.appendTo('body').modal('show');\n    loginDialog.on('hidden.bs.modal', function () {\n        loginDialog.appendTo(loginDialogContainer);\n    });\n\n    var request = Dms.ajax.createRequest({\n        url: loginFormUrl,\n        type: 'get',\n        dataType: 'html',\n        data: {'__content_only': '1'}\n    });\n\n    loginFormContainer.addClass('loading');\n\n    request.done(function (html) {\n        loginForm.html(html);\n\n        loginForm.find('form').on('submit', function (e) {\n            var form = $(this);\n            e.preventDefault();\n\n            var request = Dms.ajax.createRequest({\n                type: 'POST',\n                url: Dms.config.routes.loginUrl,\n                dataType: 'json',\n                data: form.serialize()\n            });\n\n            request.done(function (response) {\n                loginDialog.modal('hide');\n                Dms.csrf.initialize(response.csrf_token);\n                loggedInCallback();\n            });\n\n            request.fail(function () {\n                Dms.alerts.add('danger', 'Login Failed', 'Please verify your login credentials', 5000);\n            });\n        });\n    });\n\n    request.always(function () {\n        loginFormContainer.removeClass('loading');\n    });\n\n    loginDialog.on('hide.bs.modal', function () {\n        loginForm.empty();\n    });\n};","Dms.global.initializeCallbacks.push(function (element) {\n    element.find('button[data-a-href]').css('cursor', 'pointer');\n\n    element.delegate('button[data-a-href]', 'click', function (e) {\n        var button = $(this);\n        var link = $('<a/>')\n            .attr('href', $(this).attr('data-a-href'))\n            .addClass('dms-placeholder-a')\n            .hide();\n        button.before(link);\n        link.click();\n        e.preventDefault();\n        e.stopImmediatePropagation();\n    });\n\n    element.find('.btn.btn-active-toggle').on('click', function () {\n       $(this).toggleClass('active');\n    });\n});","Dms.form.initializeCallbacks.push(function () {\n    var submitButtons = $('.dms-staged-form, .dms-run-action-form').find('[type=submit].btn-danger')\n        .add('a.dms-run-action-form.btn-danger')\n        .add('button.dms-run-action-form.btn-danger');\n\n    submitButtons.click(function (e) {\n        var button = $(this);\n\n        var result = button.triggerHandler('before-confirmation');\n        if (result === false) {\n            e.stopImmediatePropagation();\n            return false;\n        }\n\n        if (button.data('dms-has-confirmed')) {\n            button.data('dms-has-confirmed', false);\n            return;\n        }\n\n        swal({\n            title: \"Are you sure?\",\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#DD6B55\",\n            confirmButtonText: \"Yes!\"\n        }, function () {\n            button.data('dms-has-confirmed', true);\n            button.click();\n        });\n\n        e.stopImmediatePropagation();\n        return false;\n    });\n});","Dms.utilities.getCsrfHeaders = function (csrfToken) {\n    return {\n        'X-CSRF-TOKEN': csrfToken || Dms.config.csrf.token\n    };\n};\n\nDms.csrf.initializeCallbacks.push(function (csrfToken) {\n    $.ajaxSetup({\n        headers: Dms.utilities.getCsrfHeaders(csrfToken)\n    });\n});\n\nDms.csrf.initializeCallbacks.push(function (csrfToken) {\n    $('form[method=post],form[method=POST] input[name=_token]').val(csrfToken);\n});","$(document).ready(function () {\n    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->\n    $.widget.bridge('uibutton', $.ui.button);\n});","$.extend({\n    replaceTag: function (currentElem, newTagObj, keepProps) {\n        var $currentElem = $(currentElem);\n        var i, $newTag = $(newTagObj).clone();\n        if (keepProps) {//{{{\n            newTag = $newTag[0];\n            newTag.className = currentElem.className;\n            $.extend(newTag.classList, currentElem.classList);\n            $.extend(newTag.attributes, currentElem.attributes);\n        }//}}}\n        $currentElem.wrapAll($newTag);\n        $currentElem.contents().unwrap();\n        // return node; (Error spotted by Frank van Luijn)\n        return this; // Suggested by ColeLawrence\n    }\n});\n\n$.fn.extend({\n    replaceTag: function (newTagObj, keepProps) {\n        // \"return\" suggested by ColeLawrence\n        return this.each(function() {\n            jQuery.replaceTag(this, newTagObj, keepProps);\n        });\n    }\n});","Dropzone.autoDiscover = false;","var getAbsoluteName = function (allElements, element) {\n    var name = element.name;\n\n    if (name.substr(-2) === '[]') {\n        var inputsWithSameNameBefore = allElements\n            .filter(function (index, otherElement) {\n                return otherElement.name === name;\n            })\n            .filter(function (index, otherElement) {\n                var preceding = 4;\n                return otherElement.compareDocumentPosition(element) & preceding;\n            });\n\n        name = name.substr(0, name.length - 2) + '[' + inputsWithSameNameBefore.length + ']';\n    }\n\n    return name;\n};\n\nDms.form.initializeCallbacks.push(function (element) {\n    element.find('form').each(function () {\n        var form = $(this);\n\n        var allInputs = form.find(':input');\n        form.on('dms-form-updated', function () {\n            allInputs = form.find(':input');\n        });\n\n        var changedInputs = {};\n        form.data('dms-changed-inputs', changedInputs);\n\n        form.on('change input', '*[name]:input', function () {\n            changedInputs[getAbsoluteName(allInputs, this)] = true;\n        })\n    });\n});\n\nDms.global.initializeCallbacks.push(function () {\n\n    $.fn.getValues = function (onlyChanged) {\n        var $els = this.find(':input');\n        var els = $els.get();\n        var changedInputs = $(this).closest('form, .dms-staged-form').data('dms-changed-inputs') || {};\n\n        var data = {};\n\n        $.each(els, function () {\n            if (this.name && !this.disabled && (this.checked\n                || /select|textarea/i.test(this.nodeName)\n                || /text|hidden|password/i.test(this.type))) {\n                var absoluteName = getAbsoluteName($els, this);\n\n                if (onlyChanged && !changedInputs[absoluteName]) {\n                    return;\n                }\n\n                data[absoluteName] = $(this).val();\n            }\n        });\n\n        this.find('.form-group[data-field-name]').each(function () {\n            var additionalDataToSubmit = $(this).triggerHandler('dms-get-input-data');\n\n            if (additionalDataToSubmit) {\n                data[$(this).attr('data-field-name')] = additionalDataToSubmit;\n            }\n        });\n\n        return data;\n    };\n\n    $.fn.restoreValues = function (data) {\n        var $els = this.find(':input');\n        var els = $els.get();\n\n        $.each(els, function () {\n            if (!this.name) {\n                return;\n            }\n\n            var name = getAbsoluteName($els, this);\n\n            if (data[name]) {\n                var value = data[name];\n                var $this = $(this);\n\n                if (this.type == 'checkbox' || this.type == 'radio') {\n                    $this.attr(\"checked\", value === $.val());\n                } else {\n                    $this.val(value);\n                }\n            }\n        });\n\n        this.find('.form-group[data-field-name]').each(function () {\n            var formGroup = $(this);\n            var fieldValue = data[formGroup.attr('data-field-name')];\n\n            if (fieldValue) {\n                formGroup.triggerHandler('dms-set-input-data', fieldValue);\n            }\n        });\n\n        return this;\n    };\n});","Dms.form.stages.makeDependentFieldSelectorFor = function (dependentFieldNames, selector, dontAddKnownData) {\n    var selectors = [];\n\n    if (dependentFieldNames) {\n        $.each(dependentFieldNames, function (index, fieldName) {\n            selectors.push(selector + '[name=\"' + fieldName + '\"]:input');\n            selectors.push(selector + '[name^=\"' + fieldName + '[\"][name$=\"]\"]:input');\n        });\n\n        return selectors.join(',');\n    } else {\n        selectors.push(selector + '[name]:input');\n    }\n\n    if (!dontAddKnownData) {\n        selectors.push('.dms-form-stage-known-data ' + selector + ':input');\n    }\n\n    return selectors.join(',');\n};\n\nDms.form.stages.makeDependentFieldSelectorForStageMap = function (stageToDependentFieldMap, selector) {\n    var selectors = [];\n\n    $.each(stageToDependentFieldMap, function (stageNumber, dependentFields) {\n        if (dependentFields === '*') {\n            selectors.push('.dms-form-stage[data-stage-number=\"' + stageNumber + '\"] ' + selector + ':input');\n        } else {\n            var fieldsInStageSelector = Dms.form.stages.makeDependentFieldSelectorFor(\n                dependentFields,\n                '.dms-form-stage[data-stage-number=\"' + stageNumber + '\"] ' + selector,\n                true\n            );\n\n            selectors = selectors.concat(fieldsInStageSelector);\n        }\n    });\n\n    selectors.push('.dms-form-stage-known-data ' + selector + ':input');\n    return selectors.join(',');\n};\n\nDms.form.stages.createFormDataFromFields = function (fields) {\n    var formData = Dms.ajax.createFormData();\n\n    fields.filter('[name]').each(function () {\n        var field = $(this);\n        var fieldName = field.attr('name');\n\n        if (field.is('[type=file]')) {\n            $.each(this.files, function (index, file) {\n                formData.append(fieldName, file);\n            });\n        } else if (field.is('[type=checkbox], [type=radio]')) {\n            if (field.is(':checked')) {\n                formData.append(fieldName, field.val());\n            }\n        } else {\n            formData.append(fieldName, field.val());\n        }\n    });\n\n    return formData;\n};\n\nDms.form.stages.getDependentDataForStage = function (formStage) {\n    var stagedForm = formStage.closest('.dms-staged-form');\n\n    if (!formStage.is('.dms-dependent-form-stage')) {\n        return Dms.ajax.createFormData();\n    }\n\n    var stageToDependentFieldsMap = JSON.parse(formStage.attr('data-stage-dependent-fields-stage-map'));\n    var dependentFieldsSelector = Dms.form.stages.makeDependentFieldSelectorForStageMap(stageToDependentFieldsMap, '*');\n\n    var formData = Dms.form.stages.createFormDataFromFields(stagedForm.find(dependentFieldsSelector));\n\n    stagedForm.find('.form-group').each(function () {\n        var formGroup = $(this);\n\n        if (!formGroup.closest('.dms-staged-form').is(stagedForm)) {\n            return;\n        }\n\n        var isDependent = false;\n\n        $.each(stageToDependentFieldsMap, function (stageNumber, fields) {\n            if (isDependent) {\n                return false;\n            }\n\n            var formGroupFieldName = formGroup.attr('data-field-name');\n\n            if (!formGroupFieldName) {\n                return;\n            }\n\n            if (formGroup.closest('.dms-form-stage').attr('data-stage-number') == stageNumber\n                && (fields === '*' || $.inArray(formGroupFieldName, fields) !== -1)) {\n                isDependent = true;\n            }\n\n            $.each(fields, function (index, fieldName) {\n                if (formGroupFieldName.lastIndexOf(fieldName + '[', 0) === 0) {\n                    isDependent = true;\n                }\n            });\n        });\n\n        if (!isDependent) {\n            return;\n        }\n\n        var additionalDataToSubmit = formGroup.triggerHandler('dms-get-input-data');\n\n        if (additionalDataToSubmit) {\n            $.each(Dms.ajax.parseData(additionalDataToSubmit), function (name, entries) {\n                $.each(entries, function (index, entry) {\n                    formData.append(name, entry.value, entry.filename);\n                });\n            });\n        }\n    });\n\n    return formData;\n};","Dms.link.isLocalLink = function (url) {\n    var rootUrl = Dms.config.routes.localUrls.root;\n    var excludedUrls = Dms.config.routes.localUrls.exclude;\n\n    if (url.indexOf(rootUrl) !== 0) {\n        return false;\n    }\n\n    var isExcluded = false;\n\n    $.each(excludedUrls, function (index, excludedUrl) {\n        if (Dms.utilities.areUrlsEqual(url, excludedUrl)) {\n            isExcluded = true;\n        }\n    });\n\n    return !isExcluded;\n};\n\nDms.link.goToUrl = function (url) {\n    if (Dms.link.isLocalLink(url)) {\n        $('<a/>').attr({href: url}).hide().appendTo(document.body).click();\n    } else {\n        window.location.href = url;\n    }\n};\n\nDms.link.reloadCurrentPage = function () {\n    Dms.link.goToUrl(window.location.href);\n};\n\nDms.global.initializeCallbacks.push(function (element) {\n    element.click(function (e) {\n        if ($(this).attr('disabled')) {\n            e.stopImmediatePropagation();\n\n            return false;\n        }\n\n        return true;\n    });\n\n\n    if (Dms.config.hasLoadedAjaxPageNavigation) {\n        return;\n    } else {\n        Dms.config.hasLoadedAjaxPageNavigation = true;\n    }\n\n    var rootUrl = Dms.config.routes.localUrls.root;\n    var contentContainer = element.find('.content-wrapper');\n    var contentElement = contentContainer.children('.dms-page-content');\n    var isPoppingState = false;\n\n    if (contentElement.length === 0) {\n        return;\n    }\n\n    var loadedScripts = $.map($('script[src]').toArray(), function (script) {\n        return $(script).attr('src');\n    });\n\n    var loadedStyles = $.map($('link[rel=stylesheet][href]').toArray(), function (style) {\n        return $(style).attr('href');\n    });\n\n    var loadedRequiredAssets = function (page, callback) {\n        var scriptToLoad = $.map(page.find('#page > .scripts > script[src]').toArray(), function (script) {\n            return $(script).attr('src');\n        });\n\n        var styleToLoad = $.map(page.find('#page > .styles > link[rel=stylesheet][href]').toArray(), function (style) {\n            return $(style).attr('href');\n        });\n\n        $.each(styleToLoad, function (index, css) {\n            if ($.inArray(css, loadedStyles) === -1) {\n                $('<link/>', {\n                    rel: 'stylesheet',\n                    type: 'text/css',\n                    href: css\n                }).appendTo('head');\n\n                loadedStyles.push(css);\n            }\n        });\n\n        var scriptSemaphore = 0;\n        var scriptsTotal = 0;\n\n        $.each(scriptToLoad, function (index, script) {\n            if ($.inArray(script, loadedScripts) === -1) {\n                scriptsTotal++;\n\n                $.getScript(script, function () {\n                    scriptSemaphore++;\n\n                    if (scriptSemaphore === scriptsTotal) {\n                        callback();\n                    }\n                });\n\n                loadedScripts.push(script);\n            }\n        });\n\n        if (scriptsTotal === 0) {\n            callback();\n        }\n    };\n\n    var currentAjaxRequest;\n\n    element.on('click', 'a[href^=\"' + rootUrl + '\"]:not([download]):not([data-no-ajax])', function (e) {\n        var link = $(this);\n        var linkUrl = link.attr('href');\n\n        if (!Dms.link.isLocalLink(linkUrl)) {\n            return;\n        }\n\n        // Ignore hash of current page, not a link just scrolling\n        var hashPos = linkUrl.indexOf('#');\n        if (hashPos === 0 || (hashPos !== -1 && linkUrl.split('#')[0] === window.location.href.split('#')[0])) {\n            return;\n        }\n\n        // Ignore non-left clicks and key combinations that open a new tab\n        if (typeof e.which !== 'undefined' && e.which !== 1 || e.ctrlKey || e.altKey || e.shiftKey) {\n            return;\n        }\n\n        if (e.isDefaultPrevented()) {\n            return;\n        }\n\n        e.preventDefault();\n        e.stopImmediatePropagation();\n\n        if (currentAjaxRequest) {\n            currentAjaxRequest.abort();\n        }\n\n        contentContainer.addClass('loading');\n\n        currentAjaxRequest = Dms.ajax.createRequest({\n            url: linkUrl,\n            type: 'get',\n            dataType: 'html',\n            data: {'__no_template': 1}\n        });\n\n        currentAjaxRequest.done(function (content) {\n            var page = $('<div>' + content + '</div>');\n\n            var finalUrl = currentAjaxRequest.responseURL || linkUrl;\n            currentAjaxRequest = null;\n\n            loadedRequiredAssets(page, function () {\n                if (!link.attr('id')) {\n                    link.attr('id', Dms.utilities.idGenerator());\n                }\n\n                contentElement.triggerHandler('dms-page-unloading');\n                contentElement.unbind().empty().append(page.find('#page > .content > *'));\n                contentContainer.removeClass('loading');\n                Dms.all.initialize(contentElement);\n\n                if (link.closest('.dms-packages-nav').length) {\n                    link.closest('li').addClass('active').siblings().removeClass('active');\n                }\n\n                document.title = page.find('#page > .title').text();\n\n                if (!isPoppingState) {\n                    history.pushState({page: finalUrl, linkId: link.attr('id')}, '', linkUrl);\n                } else {\n                    isPoppingState = false;\n                }\n            });\n        });\n\n        currentAjaxRequest.fail(function (response) {\n            if (currentAjaxRequest.statusText === 'abort') {\n                return;\n            }\n\n            Dms.controls.showErrorDialog({\n                title: \"Could not load page\",\n                text: \"An unexpected error occurred\",\n                type: \"error\",\n                debugInfo: response.responseText\n            });\n\n            contentContainer.removeClass('loading');\n        });\n    });\n\n    $(window).on('popstate', function (e) {\n        isPoppingState = true;\n        var linkId = e.originalEvent.state.linkId;\n        var link = $('#' + linkId);\n\n        if (link.length) {\n            link.click();\n        } else {\n            Dms.link.goToUrl(e.originalEvent.state.page);\n        }\n    });\n});","Dms.loader.loaders = {};\n\nDms.loader.register = function (loaderName, loadCallback, doneCallback) {\n    if (typeof (Dms.loader.loaders[loaderName]) === 'undefined') {\n        Dms.loader.loaders[loaderName] = {\n            loaded: false,\n            callbacks: []\n        };\n\n        loadCallback(function () {\n            Dms.loader.loaders[loaderName].loaded = true;\n\n            $.each(Dms.loader.loaders[loaderName].callbacks, function (index, callback) {\n                callback();\n            });\n        });\n    }\n\n    if (Dms.loader.loaders[loaderName].loaded) {\n        doneCallback();\n    } else {\n        Dms.loader.loaders[loaderName].callbacks.push(doneCallback);\n    }\n};","Dms.global.initializeCallbacks.push(function (element) {\n    var navigationFilter = element.find('.dms-nav-quick-filter');\n    var packagesNavigation = element.find('.dms-packages-nav');\n    var navigationSections = packagesNavigation.find('li.treeview');\n    var navigationLabels = packagesNavigation.find('.dms-nav-label');\n\n    navigationFilter.on('input', function () {\n        var filterBy = $(this).val();\n\n        navigationSections.hide();\n        var sectionsToShow = [];\n        navigationLabels.each(function (index, navItem) {\n            navItem = $(navItem);\n            var label = navItem.text();\n\n            var doesContainFilter = label.toLowerCase().indexOf(filterBy.toLowerCase()) !== -1;\n            navItem.closest('li').toggle(doesContainFilter);\n\n            if (doesContainFilter) {\n                navItem.closest('ul.treeview-menu').toggle(doesContainFilter).addClass('menu-open');\n                navItem.parents('li.treeview').show();\n\n                if (navItem.is('.dms-nav-label-group')) {\n                    sectionsToShow.push(navItem.closest('li.treeview').get(0));\n                }\n            }\n        });\n\n        $(sectionsToShow).find('li').show();\n        $(sectionsToShow).find('ul.treeview-menu').show().addClass('menu-open');\n    });\n\n    navigationFilter.on('keyup', function (event) {\n        var enterKey = 13;\n\n        if (event.keyCode === enterKey) {\n            var link = packagesNavigation.find('a[href!=\"javascript:void(0)\"]:visible').first();\n            link.click();\n            navigationFilter.val('');\n            navigationFilter.triggerHandler('input');\n        }\n    });\n\n    packagesNavigation.on('dms-update-active', function () {\n        var currentUrl = window.location.href;\n\n        var currentLink\n    });\n\n    element.find('.navbar-static-top .user-menu a[href]').on('click', function () {\n        $(this).closest('.user-menu').removeClass('open');\n    });\n});","Dms.utilities.countDecimals = function (value) {\n    if (value % 1 != 0) {\n        return value.toString().split(\".\")[1].length;\n    }\n\n    return 0;\n};\n\nDms.utilities.idGenerator = function () {\n    var S4 = function () {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n    };\n    return 'id' + (S4() + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + \"-\" + S4() + S4() + S4());\n};\n\nDms.utilities.combineFieldNames = function (outer, inner) {\n    if (inner.indexOf('[') === -1) {\n        return outer + '[' + inner + ']';\n    }\n\n    var firstInner = inner.substring(0, inner.indexOf('['));\n    var afterFirstInner = inner.substring(inner.indexOf('['));\n\n    return outer + '[' + firstInner + ']' + afterFirstInner;\n};\n\nDms.utilities.areUrlsEqual = function (first, second) {\n    return first.replace(/\\/+$/, '') === second.replace(/\\/+$/, '');\n};\n\nDms.utilities.downloadFileFromUrl = function (url) {\n    downloadFile(url);\n};\n\nDms.utilities.isTouchDevice = function () {\n    try {\n        document.createEvent(\"TouchEvent\");\n        return true;\n    } catch (e) {\n        return false;\n    }\n};\n\nDms.utilities.convertPhpDateFormatToMomentFormat = function (format) {\n    var replacements = {\n        'd': 'DD',\n        'D': 'ddd',\n        'j': 'D',\n        'l': 'dddd',\n        'N': 'E',\n        'S': 'o',\n        'w': 'e',\n        'z': 'DDD',\n        'W': 'W',\n        'F': 'MMMM',\n        'm': 'MM',\n        'M': 'MMM',\n        'n': 'M',\n        'o': 'YYYY',\n        'Y': 'YYYY',\n        'y': 'YY',\n        'a': 'a',\n        'A': 'A',\n        'g': 'h',\n        'G': 'H',\n        'h': 'hh',\n        'H': 'HH',\n        'i': 'mm',\n        's': 'ss',\n        'u': 'SSS',\n        'e': 'zz', // TODO: full timezone id\n        'O': 'ZZ',\n        'P': 'Z',\n        'T': 'zz',\n        'U': 'X'\n    };\n\n    var newFormat = '';\n\n    $.each(format.split(''), function (index, char) {\n        if (replacements[char]) {\n            newFormat += replacements[char];\n        } else {\n            newFormat += char;\n        }\n    });\n\n    return newFormat;\n};\n\nDms.utilities.isInView = function (element) {\n    var topOfElement = element.offset().top;\n    if (!element.is(':visible')) {\n        element.css({'visibility': 'hidden'}).show();\n        topOfElement = element.offset().top;\n        element.css({'visibility': '', 'display': ''});\n    }\n    var bottomOfElement = topOfElement + element.outerHeight();\n\n    var topOfScreen = $(window).scrollTop();\n    var bottomOfScreen = topOfScreen + window.innerHeight;\n\n    return topOfScreen < topOfElement && bottomOfScreen > bottomOfElement;\n};\n\nDms.utilities.scrollToView = function (element) {\n    if (!Dms.utilities.isInView(element)) {\n        // Not in view so scroll to it\n        var topOfElement = element.offset().top;\n        $('html,body').animate({scrollTop: topOfElement - window.innerHeight / 3}, 500);\n    }\n};\n\nDms.utilities.throttleCallback = function (fn, threshhold, scope) {\n    var last, deferTimer;\n\n    return function () {\n        var context = scope || this;\n\n        var now = +new Date,\n            args = arguments;\n        if (last && now < last + threshhold) {\n            // hold on to it\n            clearTimeout(deferTimer);\n            deferTimer = setTimeout(function () {\n                last = now;\n                fn.apply(context, args);\n            }, threshhold);\n        } else {\n            last = now;\n            fn.apply(context, args);\n        }\n    };\n};\n\nDms.utilities.debounceCallback = function (func, wait, immediate) {\n    var timeout;\n    return function () {\n        var context = this, args = arguments;\n        var later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};","Dms.controls.showContentDialog = function (title, content, showInIframe) {\n    var contentDialog = $('.dms-content-dialog').first();\n\n    contentDialog.find('.modal-title').text(title || '');\n\n    var dialogBody = contentDialog.find('.modal-body');\n    dialogBody.empty();\n\n    if (showInIframe) {\n        var iframe = $('<iframe />');\n        iframe.addClass('dms-content-iframe');\n        dialogBody.append(iframe);\n        setTimeout(function () {\n            var document = iframe.contents().get(0);\n            document.open();\n            document.write(content);\n            document.close();\n        }, 1);\n    } else {\n        dialogBody.html(content);\n    }\n\n    contentDialog.appendTo('body').modal('show');\n    Dms.all.initialize(dialogBody);\n\n    dialogBody.on('click', 'a[href]', function () {\n        contentDialog.modal('hide');\n    });\n};","Dms.controls.showErrorDialog = function (config) {\n    if (Dms.config.debug && config.debugInfo) {\n\n        var errorDialog = $('.dms-error-dialog').first();\n\n        errorDialog.find('.modal-title').text(config.title || 'An error occurred');\n\n        var dialogBody = errorDialog.find('.modal-body');\n        dialogBody.empty();\n\n        var iframe = $('<iframe />');\n        iframe.addClass('dms-content-iframe');\n        dialogBody.append(iframe);\n        setTimeout(function () {\n            var document = iframe.contents().get(0);\n            document.open();\n            document.write(config.debugInfo);\n            document.close();\n        }, 1);\n\n        errorDialog.appendTo('body').modal('show');\n\n        errorDialog.find('.dms-refresh-page-button').on('click', function () {\n            window.location.reload();\n        });\n\n    } else {\n        config = $.extend({}, config, {\n            type: 'error'\n        });\n\n        swal(config);\n    }\n};","window.Parsley.addValidator('ipAddress', {\n    requirementType: 'boolean',\n    validateString: function (value) {\n        var ipV4Regex = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|$)){4}$/;\n        var ipV6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\n\n        if (ipV4Regex.test(value)) {\n            return true;\n        }\n\n        if (ipV6Regex.test(value)) {\n            return true;\n        }\n\n        return false;\n    },\n    messages: {\n        en: 'This value should be a valid ip address'\n    }\n});\n\nwindow.Parsley.addValidator('maxDecimalPoints', {\n    requirementType: 'integer',\n    validateString: function (value, requirement) {\n        return Dms.utilities.countDecimals(value) <= requirement;\n    },\n    messages: {\n        en: 'This value should have a maximum of %d decimal places'\n    }\n});\n\nwindow.Parsley.addValidator('minElements', {\n    requirementType: 'integer',\n    validateMultiple: function (value, requirement) {\n        return value.length >= requirement;\n    },\n    messages: {\n        en: 'At least %s options must be selected'\n    }\n});\n\nwindow.Parsley.addValidator('maxElements', {\n    requirementType: 'integer',\n    validateMultiple: function (value, requirement) {\n        return value.length <= requirement;\n    },\n    messages: {\n        en: 'No more than %s options can be selected'\n    }\n});\n\n","Dms.form.validation.initialize = function (form) {\n    form.attr('data-parsley-validate', '1');\n    return form.parsley(window.ParsleyConfig);\n};\n\nDms.form.validation.clearMessages = function (form) {\n    form.find('.form-group').removeClass('has-error');\n    form.find('.help-block.help-block-error').remove();\n};\n\nDms.form.validation.displayMessages = function (form, fieldMessages, generalMessages) {\n    if (!fieldMessages && !generalMessages) {\n        return;\n    }\n\n    var makeHelpBlock = function () {\n        return $('<div />').addClass('help-block help-block-error');\n    };\n\n    var helpBlock = makeHelpBlock();\n\n    $.each(generalMessages, function (index, message) {\n        helpBlock.append($('<strong />').text(message));\n    });\n\n    form.prepend(helpBlock);\n\n    var flattenedFieldMessages = {};\n\n    var visitMessages = function (fieldName, messages) {\n        if ($.isArray(messages)) {\n            $.each(messages, function (index, message) {\n                if (typeof flattenedFieldMessages[fieldName] === 'undefined') {\n                    flattenedFieldMessages[fieldName] = [];\n                }\n\n                flattenedFieldMessages[fieldName].push(message);\n            });\n        } else {\n            $.each(messages.constraints, function (index, message) {\n                if (typeof flattenedFieldMessages[fieldName] === 'undefined') {\n                    flattenedFieldMessages[fieldName] = [];\n                }\n\n                flattenedFieldMessages[fieldName].push(message);\n            });\n\n            $.each(messages.fields, function (fieldElementName, elementMessages) {\n                visitMessages(fieldName + '[' + fieldElementName + ']', elementMessages);\n            });\n        }\n    };\n    $.each(fieldMessages, visitMessages);\n\n    $.each(flattenedFieldMessages, function (fieldName, messages) {\n        var fieldGroup = form.find('.form-group[data-field-name=\"' + fieldName + '\"]').add(\n            form.find('.form-group *[data-field-validation-for]')\n                .filter(function () {\n                    return $(this).attr('data-field-validation-for').indexOf(fieldName) !== -1;\n                })\n                .closest('.form-group')\n        );\n\n        var validationMessagesContainer = fieldGroup.find('.dms-validation-messages-container')\n            .filter(function () {\n                return $(this).closest('.form-group').is(fieldGroup);\n            });\n\n        var helpBlock = makeHelpBlock();\n        $.each($.unique(messages), function (index, message) {\n            helpBlock.append($('<p/>').append($('<strong />').text(message)));\n        });\n\n        fieldGroup.addClass('has-error');\n        validationMessagesContainer.prepend(helpBlock);\n    });\n};","window.ParsleyConfig = {\n    successClass: \"has-success\",\n    errorClass: \"has-error\",\n    excluded: \"input[type=button], input[type=submit], input[type=reset], input[type=hidden], [disabled], :hidden\",\n    classHandler: function (el) {\n        return el.$element.closest(\".form-group\");\n    },\n    errorsContainer: function (el) {\n        return el.$element.closest(\".form-group\").children().children(\".dms-validation-messages-container\");\n    },\n    errorsWrapper: \"<span class='help-block dms-validation-message'></span>\",\n    errorTemplate: \"<span></span>\"\n};","Dms.global.initializeCallbacks.push(function () {\n    window.Parsley.addCatalog('en', {\n        defaultMessage: \"This value seems to be invalid.\",\n        type: {\n            email: \"This value should be a valid email.\",\n            url: \"This value should be a valid url.\",\n            number: \"This value should be a valid number.\",\n            integer: \"This value should be a valid integer.\",\n            digits: \"This value should be digits.\",\n            alphanum: \"This value should be alphanumeric.\"\n        },\n        notblank: \"This value should not be blank.\",\n        required: \"This value is required.\",\n        pattern: \"This value seems to be invalid.\",\n        min: \"This value should be greater than or equal to %s.\",\n        max: \"This value should be lower than or equal to %s.\",\n        range: \"This value should be between %s and %s.\",\n        minlength: \"This value is too short. It should have %s characters or more.\",\n        maxlength: \"This value is too long. It should have %s characters or fewer.\",\n        length: \"This character length is invalid. It should be between %s and %s characters long.\",\n        mincheck: \"You must select at least %s choices.\",\n        maxcheck: \"You must select %s choices or fewer.\",\n        check: \"You must select between %s and %s choices.\",\n        equalto: \"This must match the confirmation field.\"\n    }, true);\n});","Dms.chart.initializeCallbacks.push(function (element) {\n\n    element.find('.dms-chart-control').each(function () {\n        var control = $(this);\n        var chartContainer = control.find('.dms-chart-container');\n        var chartElement = chartContainer.find('.dms-chart');\n        var chartRangePicker = chartContainer.find('.dms-chart-range-picker');\n        var loadChartUrl = control.attr('data-load-chart-url');\n\n        var criteria = {\n            orderings: [],\n            conditions: []\n        };\n\n        var currentAjaxRequest;\n\n        var loadCurrentData = function () {\n            chartContainer.addClass('loading');\n\n            if (currentAjaxRequest) {\n                currentAjaxRequest.abort();\n            }\n\n            currentAjaxRequest = Dms.ajax.createRequest({\n                url: loadChartUrl,\n                type: 'post',\n                dataType: 'html',\n                data: criteria\n            });\n\n            currentAjaxRequest.done(function (chartData) {\n                chartElement.html(chartData);\n                Dms.chart.initialize(chartElement);\n            });\n\n            currentAjaxRequest.fail(function (response) {\n                if (currentAjaxRequest.statusText === 'abort') {\n                    return;\n                }\n\n                chartContainer.addClass('error');\n\n                Dms.controls.showErrorDialog({\n                    title: \"Could not load chart data\",\n                    text: \"An unexpected error occurred\",\n                    type: \"error\",\n                    debugInfo: response.responseText\n                });\n            });\n\n            currentAjaxRequest.always(function () {\n                chartContainer.removeClass('loading');\n            });\n        };\n\n        loadCurrentData();\n\n        chartRangePicker.on('dms-range-updated', function () {\n            var horizontalAxis = chartContainer.attr('data-date-axis-name');\n            criteria.conditions = [\n                {axis: horizontalAxis, operator: '>=', value: chartRangePicker.find('.dms-start-input').val()},\n                {axis: horizontalAxis, operator: '<=', value: chartRangePicker.find('.dms-end-input').val()}\n            ];\n\n            loadCurrentData();\n        });\n    });\n});","Dms.chart.initializeCallbacks.push(function (element) {\n\n    element.find('.dms-geo-chart').each(function () {\n        var chart = $(this);\n        var isCityChart = chart.attr('data-city-chart');\n        var hasLatLng = chart.attr('data-has-lat-lng');\n        var chartData = JSON.parse(chart.attr('data-chart-data'));\n        var region = chart.attr('data-region');\n        var locationLabel = chart.attr('data-location-label');\n        var valueLabels = JSON.parse(chart.attr('data-value-labels'));\n\n        Dms.loader.register('google-geo-charts', function (callback) {\n            google.charts.load('current', {'packages': ['geochart']});\n            google.charts.setOnLoadCallback(callback);\n        }, function () {\n            var headers = [];\n\n            if (hasLatLng) {\n                headers.push('Latitude');\n                headers.push('Longitude');\n            }\n\n            headers.push(locationLabel);\n            headers = headers.concat(valueLabels);\n\n            var transformedChartData = [headers];\n\n            if (chartData.length) {\n                $.each(chartData, function (index, row) {\n                    transformedChartData.push((hasLatLng ? row.lat_lng : []).concat([row.label]).concat(row.values));\n                });\n            }\n            \n            var data = google.visualization.arrayToDataTable(transformedChartData);\n\n            var googleChart = new google.visualization.GeoChart(chart.get(0));\n\n            var drawChart = function () {\n                googleChart.draw(data, {\n                    displayMode: isCityChart ? 'markers' : 'regions',\n                    region: region\n                });\n            };\n\n            var resizeTimeoutId;\n            $(window).resize(function () {\n                if (resizeTimeoutId) {\n                    clearTimeout(resizeTimeoutId);\n                }\n\n                resizeTimeoutId = setTimeout(function () {\n                    drawChart();\n                    resizeTimeoutId = null;\n                }, 500);\n            });\n\n            drawChart();\n        });\n    });\n});","Dms.chart.initializeCallbacks.push(function (element) {\n    element.find('.dms-graph-chart').each(function () {\n        var chart = $(this);\n        var dateFormat = Dms.utilities.convertPhpDateFormatToMomentFormat(chart.attr('data-date-format'));\n        var chartData = JSON.parse(chart.attr('data-chart-data'));\n        var chartType = chart.attr('data-chart-type');\n        var horizontalAxisKey = chart.attr('data-horizontal-axis-key');\n        var horizontalAxisUnitType = chart.attr('data-horizontal-unit-type');\n        var verticalAxisKeys = JSON.parse(chart.attr('data-vertical-axis-keys'));\n        var verticalAxisLabels = JSON.parse(chart.attr('data-vertical-axis-labels'));\n        var minTimestamp;\n        var maxTimestamp;\n        var timeRowLookup = {};\n\n        if (!chart.attr('id')) {\n            chart.attr('id', Dms.utilities.idGenerator());\n        }\n\n        $.each(chartData, function (index, row) {\n            var timestamp = moment(row[horizontalAxisKey], dateFormat).valueOf();\n            row[horizontalAxisKey] = timestamp;\n            timeRowLookup[timestamp] = true;\n\n            if (!minTimestamp || timestamp < minTimestamp) {\n                minTimestamp = timestamp;\n            }\n\n            if (!maxTimestamp || timestamp > maxTimestamp) {\n                maxTimestamp = timestamp;\n            }\n        });\n\n        var zeroFillMissingValues = function (unitType, chartData) {\n            if (chartData.length === 0) {\n                return;\n            }\n\n            var addUnitToDate;\n            if (unitType === 'date') {\n                addUnitToDate = function (date) {\n                    date.setDate(date.getDate() + 1);\n                };\n            } else {\n                addUnitToDate = function (date) {\n                    date.setSeconds(date.getSeconds() + 1)\n                };\n            }\n\n            for (var i = new Date(minTimestamp); i.getTime() < maxTimestamp; addUnitToDate(i)) {\n                if (typeof timeRowLookup[i.getTime()] === 'undefined') {\n                    var rowData = {};\n                    rowData[horizontalAxisKey] = i.getTime();\n\n                    $.each(verticalAxisKeys, function (index, verticalAxisKey) {\n                        rowData[verticalAxisKey] = 0;\n                    });\n\n                    chartData.push(rowData);\n                }\n            }\n        };\n\n        zeroFillMissingValues(horizontalAxisUnitType, chartData);\n\n        var morrisConfig = {\n            element: chart.attr('id'),\n            data: chartData,\n            xkey: horizontalAxisKey,\n            ykeys: verticalAxisKeys,\n            labels: verticalAxisLabels,\n            resize: true,\n            redraw: true,\n            dateFormat: function (timestamp) {\n                return moment(timestamp).format(dateFormat);\n            }\n        };\n\n        var morrisChart;\n        if (chartType === 'bar') {\n            morrisChart = Morris.Bar(morrisConfig);\n        } else if (chartType === 'area') {\n            morrisChart = Morris.Area(morrisConfig);\n        } else {\n            morrisChart = Morris.Line(morrisConfig);\n        }\n\n        $(window).on('resize', function () {\n            if (morrisChart.raphael) {\n                morrisChart.redraw();\n            }\n        });\n    });\n});","Dms.chart.initializeCallbacks.push(function (element) {\n    element.find('.dms-pie-chart').each(function () {\n        var chart = $(this);\n        var chartData = JSON.parse(chart.attr('data-chart-data'));\n\n        if (!chart.attr('id')) {\n            chart.attr('id', Dms.utilities.idGenerator());\n        }\n\n        var morrisChart = Morris.Donut({\n            element: chart.attr('id'),\n            data: chartData,\n            resize: true,\n            redraw: true\n        });\n\n        $(window).on('resize', function () {\n            if (morrisChart.raphael) {\n                morrisChart.redraw();\n            }\n        });\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    var fieldCounter = 1;\n\n    element.find('.dms-form-fieldset .form-group').each(function () {\n        var fieldLabel = $(this).children('.dms-label-container label[data-for]');\n        var forFieldName = fieldLabel.attr('data-for');\n\n        if (forFieldName) {\n            var forField = $(this).first('*[name=\"' + forFieldName + '\"], .dms-inner-form[data-name=\"' + forFieldName + '\"]');\n\n            if (!forField.attr('id')) {\n                forField.attr('id', 'dms-field-' + fieldCounter);\n                fieldCounter++;\n            }\n\n            fieldLabel.attr('for', forField.attr('id'));\n        }\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    element.find('.dms-staged-form').each(function () {\n        var form = $(this);\n        var parsley = Dms.form.validation.initialize(form);\n        var stageElements = form.find('.dms-form-stage');\n\n        var arePreviousFieldsValid = function (fields) {\n            var originalScroll = $(document).scrollTop();\n            var focusedElement = $(document.activeElement);\n            parsley.validate();\n            focusedElement.focus();\n            $(document).scrollTop(originalScroll);\n\n            return fields.closest('.form-group').find('.dms-validation-message *').length === 0;\n        };\n\n        stageElements.filter('.dms-dependent-form-stage').each(function () {\n            var currentStage = $(this);\n            var container = currentStage.closest('.dms-form-stage-container');\n            var previousStages = container.prevAll('.dms-form-stage-container').find('.dms-form-stage');\n            var loadStageUrl = currentStage.attr('data-load-stage-url');\n            var dependentFields = currentStage.attr('data-stage-dependent-fields-stage-map');\n            var stageToDependentFieldsMap = dependentFields ? JSON.parse(currentStage.attr('data-stage-dependent-fields-stage-map')) : null;\n            var currentAjaxRequest = null;\n            var previousLoadAttempt = 0;\n            var minMillisecondsBetweenLoads = 2000;\n            var isWaitingForNextLoadAttempt = false;\n\n            var makeDependentFieldSelectorFor = function (selector) {\n                if (stageToDependentFieldsMap) {\n                    return Dms.form.stages.makeDependentFieldSelectorForStageMap(stageToDependentFieldsMap, selector);\n                } else {\n                    return Dms.form.stages.makeDependentFieldSelectorFor(null, selector);\n                }\n            };\n\n            var loadNextStage = function (event) {\n                if (event && event.target) {\n                    var formForEventTarget = $(event.target).closest('.dms-staged-form');\n\n                    if (!formForEventTarget.is(form)) {\n                        return;\n                    }\n                }\n\n                if (currentAjaxRequest) {\n                    currentAjaxRequest.abort();\n                }\n\n                if (stageToDependentFieldsMap) {\n                    var hasLoadedAllRequiredFields = true;\n\n                    $.each(stageToDependentFieldsMap, function (stageNumber, dependentFields) {\n                        var stage = previousStages.filter('[data-stage-number=' + stageNumber + ']');\n\n                        $.each(dependentFields, function (index, fieldName) {\n                            if (stage.find('.form-group[data-field-name=\"' + fieldName + '\"]').length === 0) {\n                                hasLoadedAllRequiredFields = false;\n                            }\n                        });\n                    });\n\n                    if (!hasLoadedAllRequiredFields) {\n                        return;\n                    }\n                }\n\n                container.removeClass('loaded');\n                container.addClass('loading');\n\n                var currentTime = new Date().getTime();\n                var millisecondsBetweenLastLoad = currentTime - previousLoadAttempt;\n\n                if (millisecondsBetweenLastLoad >= minMillisecondsBetweenLoads) {\n                    isWaitingForNextLoadAttempt = false;\n                    previousLoadAttempt = currentTime;\n                }\n                else {\n                    if (!isWaitingForNextLoadAttempt) {\n                        isWaitingForNextLoadAttempt = true;\n                        setTimeout(loadNextStage, minMillisecondsBetweenLoads - millisecondsBetweenLastLoad);\n                    }\n                    return;\n                }\n\n                var previousFields = form.find(makeDependentFieldSelectorFor('*'));\n\n                if (!arePreviousFieldsValid(previousFields)) {\n                    container.removeClass('loading');\n                    return;\n                }\n\n                Dms.form.validation.clearMessages(form);\n\n                var formData = Dms.form.stages.getDependentDataForStage(currentStage);\n\n                currentAjaxRequest = Dms.ajax.createRequest({\n                    url: loadStageUrl,\n                    type: 'post',\n                    processData: false,\n                    contentType: false,\n                    dataType: 'html',\n                    data: formData\n                });\n\n                currentAjaxRequest.done(function (html) {\n                    currentStage.triggerHandler('dms-stage-reload');\n                    container.addClass('loaded');\n                    var currentValues = currentStage.getValues(true);\n                    currentStage.html(html);\n                    Dms.form.initialize(currentStage);\n                    Dms.table.initialize(currentStage);\n                    currentStage.restoreValues(currentValues);\n                    form.triggerHandler('dms-form-updated');\n                });\n\n                currentAjaxRequest.fail(function (xhr) {\n                    if (currentAjaxRequest.statusText === 'abort') {\n                        return;\n                    }\n\n                    switch (xhr.status) {\n                        case 422: // Unprocessable Entity (validation failure)\n                            var validation = JSON.parse(xhr.responseText);\n                            Dms.form.validation.displayMessages(form, validation.messages.fields, validation.messages.constraints);\n                            break;\n\n                        case 400: // Bad request\n                            Dms.controls.showErrorDialog({\n                                title: \"Could not load form\",\n                                text: JSON.parse(xhr.responseText).message,\n                                type: \"error\"\n                            });\n                            break;\n\n                        default: // Unknown error\n                            Dms.controls.showErrorDialog({\n                                title: \"Could not load form\",\n                                text: \"An unexpected error occurred\",\n                                type: \"error\",\n                                debugInfo: xhr.responseText\n                            });\n                            break;\n                    }\n                });\n\n                currentAjaxRequest.always(function () {\n                    container.removeClass('loading');\n                });\n            };\n\n            form.on('input', makeDependentFieldSelectorFor('input'), loadNextStage);\n            form.on('input', makeDependentFieldSelectorFor('textarea'), loadNextStage);\n            form.on('change', makeDependentFieldSelectorFor('select'), loadNextStage);\n\n            if (stageToDependentFieldsMap) {\n                var selectors = [];\n\n                $.each(stageToDependentFieldsMap, function (stageNumber, dependentFields) {\n                    var stage = previousStages.filter('[data-stage-number=' + stageNumber + ']');\n                    $.each(dependentFields, function (index, fieldName) {\n                        selectors.push('.dms-form-stage[data-stage-number=' + stageNumber + '] .form-group[data-field-name=\"' + fieldName + '\"]');\n                    });\n                });\n\n                form.on('dms-change', selectors.join(','), loadNextStage);\n            } else {\n                form.on('dms-change', '.form-group[data-field-name]', loadNextStage);\n            }\n        });\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    element.find('.dms-staged-form, .dms-run-action-form').each(function () {\n        var form = $(this);\n        var formContainer = form.closest('.dms-staged-form-container');\n        var parsley = Dms.form.validation.initialize(form);\n        var afterRunCallbacks = [];\n        var submitButtons = form.find('input[type=submit], button[type=submit]');\n        var submitMethod = form.attr('data-method');\n        var submitUrl = form.attr('data-action');\n        var reloadFormUrl = form.attr('data-reload-form-url');\n        var shouldReloadPageAfterSubmit = form.attr('data-reload-page-after-submit');\n\n        if ($(this).is('a.dms-run-action-form, button.dms-run-action-form')) {\n            submitButtons = submitButtons.add(this);\n        }\n\n        var isFormValid = function () {\n            return parsley.isValid()\n                && form.find('.dms-validation-message *').length === 0\n                && form.find('.dms-form-stage-container').length === form.find('.dms-form-stage-container.loaded').length;\n        };\n\n        submitButtons.on('click before-confirmation', function (e) {\n            parsley.validate();\n\n            if (!isFormValid()) {\n                e.stopImmediatePropagation();\n                form.find('.dms-form-stage-container:not(.loaded)').addClass('has-error');\n                return false;\n            }\n        });\n\n        submitButtons.on('click', function (e) {\n            e.preventDefault();\n\n            Dms.form.validation.clearMessages(form);\n\n            form.triggerHandler('dms-before-submit');\n\n            var fieldsToReappend = [];\n            form.find('.dms-form-no-submit').each(function () {\n                var removedFields = $(this).children().detach();\n\n                fieldsToReappend.push({\n                    parentElement: $(this),\n                    children: removedFields\n                });\n            });\n\n            var formData = Dms.form.stages.createFormDataFromFields(form.find(':input'));\n            form.find('.form-group').each(function () {\n                var additionalDataToSubmit = $(this).triggerHandler('dms-get-input-data');\n\n                if (additionalDataToSubmit) {\n                    $.each(Dms.ajax.parseData(additionalDataToSubmit), function (name, entries) {\n                        $.each(entries, function (index, entry) {\n                            formData.append(name, entry.value, entry.filename);\n                        });\n                    });\n                }\n            });\n\n            $.each(fieldsToReappend, function (index, elements) {\n                elements.parentElement.append(elements.children);\n            });\n\n            submitButtons.prop('disabled', true);\n            submitButtons.addClass('ladda-button').attr('data-style', 'expand-right');\n            var ladda = Ladda.create(submitButtons.get(0));\n            ladda.start();\n\n            var currentAjaxRequest = Dms.ajax.createRequest({\n                url: submitUrl,\n                type: submitMethod,\n                processData: false,\n                contentType: false,\n                dataType: 'json',\n                data: formData,\n                xhr: function () {\n                    var xhr = $.ajaxSettings.xhr();\n\n                    if (form.find('input[type=file]').length && xhr.upload) {\n                        xhr.upload.addEventListener('progress', function (event) {\n                            if (event.lengthComputable) {\n                                ladda.setProgress(event.loaded / event.total);\n                            }\n                        }, false);\n                    }\n\n                    return xhr;\n                }\n            });\n\n            currentAjaxRequest.done(function (data, statusText, xhr) {\n                Dms.action.responseHandler(xhr.status, submitUrl, data);\n                $.each(afterRunCallbacks, function (index, callback) {\n                    callback(data);\n                });\n\n                form.triggerHandler('dms-post-submit-success');\n            });\n\n            currentAjaxRequest.fail(function (xhr) {\n                if (currentAjaxRequest.statusText === 'abort') {\n                    return;\n                }\n\n                switch (xhr.status) {\n                    case 401: // Unauthorized\n                        Dms.controls.showErrorDialog({\n                            title: \"Could not perform action\",\n                            text: \"You do not possess the necessary permissions to authorize this action\",\n                            type: \"error\"\n                        });\n                        break;\n\n                    case 422: // Unprocessable Entity (validation failure)\n                        var validation = JSON.parse(xhr.responseText);\n                        Dms.form.validation.displayMessages(form, validation.messages.fields, validation.messages.constraints);\n                        Dms.utilities.scrollToView(form.find('.help-block-error:not(:empty)').first());\n                        break;\n\n                    default:\n                        try {\n                            var response = JSON.parse(xhr.responseText);\n                            Dms.action.responseHandler(xhr.status, submitUrl, response);\n                        } catch (e) {\n                            // Unknown error\n                            Dms.controls.showErrorDialog({\n                                title: \"Could not submit form\",\n                                text: \"An unexpected error occurred\",\n                                type: \"error\",\n                                debugInfo: xhr.responseText\n                            });\n                            break;\n                        }\n                }\n            });\n\n            currentAjaxRequest.always(function () {\n                submitButtons.prop('disabled', false);\n                ladda.stop();\n            });\n\n            return false;\n        });\n\n        var parentToRemove = form.attr('data-after-run-remove-closest');\n        if (parentToRemove) {\n            afterRunCallbacks.push(function () {\n                form.closest(parentToRemove).fadeOut(100);\n            });\n        }\n\n        afterRunCallbacks.push(function () {\n            form.find('input[type=password]').val('');\n        });\n\n        afterRunCallbacks.push(function (data) {\n            if (data.redirect) {\n                return;\n            }\n\n            if (shouldReloadPageAfterSubmit) {\n                Dms.link.reloadCurrentPage();\n                return;\n            }\n\n            if (!form.is('.dms-staged-form')) {\n                return;\n            }\n\n            var request = Dms.ajax.createRequest({\n                url: reloadFormUrl,\n                type: 'get',\n                dataType: 'html',\n                data: {'__content_only': '1'}\n            });\n\n            formContainer.addClass('loading');\n\n            request.done(function (html) {\n                var newForm = $(html).find('.dms-staged-form').first();\n                form.replaceWith(newForm);\n                Dms.form.initialize(newForm.parent());\n                Dms.table.initialize(newForm.parent());\n            });\n\n            request.always(function () {\n                formContainer.removeClass('loading');\n            });\n        });\n    });\n});","Dms.form.initializeValidationCallbacks.push(function (element) {\n\n    element.find('.dms-form-fields').each(function () {\n        if (!$(this).attr('id')) {\n            $(this).attr('id', Dms.utilities.idGenerator());\n        }\n    });\n\n    element.find('.dms-form-fields').each(function () {\n        var formFieldSection = $(this);\n        var formFieldsGroupId = formFieldSection.attr('id');\n\n\n        var buildElementSelector = function (fieldName) {\n            return '#' + formFieldsGroupId + ' *[name=\"' + fieldName + '\"]';\n        };\n\n        var fieldValidations = {\n            'data-equal-fields': 'data-parsley-equalto',\n            'data-greater-than-fields': 'data-parsley-gt',\n            'data-greater-than-or-equal-fields': 'data-parsley-gte',\n            'data-less-than-fields': 'data-parsley-lt',\n            'data-less-than-or-equal-fields': 'data-parsley-lte'\n        };\n\n        $.each(fieldValidations, function (validationAttr, parsleyAttr) {\n            var fieldsMap = formFieldSection.attr(validationAttr);\n\n            if (fieldsMap) {\n                $.each(JSON.parse(fieldsMap), function (fieldName, otherFieldName) {\n                    var field = $(buildElementSelector(fieldName));\n                    field.attr(parsleyAttr, buildElementSelector(otherFieldName));\n                });\n            }\n        });\n    });\n\n    element.find('.dms-staged-form').each(function () {\n        var form = $(this);\n        var parsley = Dms.form.validation.initialize(form);\n\n        form.find('.dms-form-fields').each(function (index) {\n            $(this).find(':input').attr('data-parsley-group', 'validation-group-' + index);\n        });\n    });\n\n    element.find('.dms-form').each(function () {\n        var form = $(this);\n        var parsley = Dms.form.validation.initialize(form);\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    element.find('.list-of-checkboxes').each(function () {\n        var listOfCheckboxes = $(this);\n        listOfCheckboxes.find('input[type=checkbox]').iCheck({\n            checkboxClass: 'icheckbox_square-blue',\n            increaseArea: '20%'\n        });\n\n        var firstCheckbox = listOfCheckboxes.find('input[type=checkbox]').first();\n        firstCheckbox.attr('data-parsley-min-elements', listOfCheckboxes.attr('data-min-elements'));\n        firstCheckbox.attr('data-parsley-max-elements', listOfCheckboxes.attr('data-max-elements'));\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('input[type=checkbox].single-checkbox').iCheck({\n        checkboxClass: 'icheckbox_square-blue',\n        increaseArea: '20%'\n    });\n\n    element.find('input[type=checkbox]').each(function () {\n        var formGroup = $(this).closest('.form-group');\n\n        $(this).on('ifToggled', function(event){\n            formGroup.trigger('dms-change');\n        });\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('input.dms-colour-input').each(function () {\n        var config = {\n            theme: 'bootstrap'\n        };\n\n        if ($(this).hasClass('dms-colour-input-rgb')) {\n            config.format = 'rgb';\n        } else if ($(this).hasClass('dms-colour-input-rgba')) {\n            config.format = 'rgb';\n            config.opacity = true;\n        }\n\n        $(this).addClass('minicolors').minicolors(config);\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    var convertFromUtcToLocal = function (dateFormat, value) {\n        if (value) {\n            return moment.utc(value, dateFormat).local().format(dateFormat);\n        } else {\n            return '';\n        }\n    };\n\n    var convertFromLocalToUtc = function (dateFormat, value) {\n        if (value) {\n            return moment(value, dateFormat).utc().format(dateFormat);\n        } else {\n            return '';\n        }\n    };\n\n    var submitUtcDateTimeViaHiddenInput = function (stagedForm, dateFormat, originalInput) {\n        var inputName = originalInput.data('dms-input-name') || originalInput.attr('name');\n        originalInput.removeAttr('name');\n        originalInput.data('dms-input-name', inputName);\n\n        stagedForm.find('input[type=hidden][name=\"' + inputName + '\"]').remove();\n        stagedForm.append($('<input type=\"hidden\" />').attr('name', inputName).val(convertFromLocalToUtc(dateFormat, originalInput.val())));\n    };\n\n    element.find('input.dms-date-or-time').each(function () {\n        var inputElement = $(this);\n        var formGroup = inputElement.closest('.form-group');\n        var stagedForm = formGroup.closest('.dms-staged-form');\n        var phpDateFormat = inputElement.attr('data-date-format');\n        var dateFormat = Dms.utilities.convertPhpDateFormatToMomentFormat(phpDateFormat);\n        var mode = inputElement.attr('data-mode');\n\n        var config = {\n            locale: {\n                format: dateFormat\n            },\n            parentEl: inputElement.closest('.dms-date-picker-container'),\n            singleDatePicker: true,\n            showDropdowns: true,\n            autoApply: true,\n            linkedCalendars: false,\n            autoUpdateInput: false\n        };\n\n        if (mode === 'date-time') {\n            config.timePicker = true;\n            config.timePickerSeconds = phpDateFormat.indexOf('s') !== -1;\n\n            inputElement.val(convertFromUtcToLocal(dateFormat, inputElement.val()));\n            stagedForm.on('dms-before-submit', function () {\n                submitUtcDateTimeViaHiddenInput(stagedForm, dateFormat, inputElement);\n            });\n        }\n\n        if (mode === 'time') {\n            config.timePicker = true;\n            config.timePickerSeconds = phpDateFormat.indexOf('s') !== -1;\n        }\n        // TODO: timezoned-date-time\n\n        inputElement.daterangepicker(config, function (date) {\n            inputElement.val(date.format(dateFormat));\n        });\n\n        var picker = inputElement.data('daterangepicker');\n\n        if (inputElement.val()) {\n            picker.setStartDate(inputElement.val());\n        }\n\n        if (mode === 'time') {\n            inputElement.closest('.dms-date-picker-container').find('.calendar-table').hide();\n        }\n\n        inputElement.on('apply.daterangepicker', function () {\n            formGroup.trigger('dms-change');\n        });\n    });\n\n    element.find('.dms-date-or-time-range').each(function () {\n        var rangeElement = $(this);\n        var formGroup = rangeElement.closest('.form-group');\n        var stagedForm = formGroup.closest('.dms-staged-form');\n        var startInput = rangeElement.find('.dms-start-input');\n        var endInput = rangeElement.find('.dms-end-input');\n        var claerButton = rangeElement.find('.dms-btn-clear-input');\n        var phpDateFormat = startInput.attr('data-date-format');\n        var dateFormat = Dms.utilities.convertPhpDateFormatToMomentFormat(phpDateFormat);\n        var mode = rangeElement.attr('data-mode');\n\n        var config = {\n            locale: {\n                format: dateFormat\n            },\n            parentEl: rangeElement.parent(),\n            showDropdowns: true,\n            autoApply: !rangeElement.attr('data-dont-auto-apply'),\n            linkedCalendars: false,\n            autoUpdateInput: false\n        };\n\n        if (mode === 'date-time') {\n            config.timePicker = true;\n            config.timePickerSeconds = phpDateFormat.indexOf('s') !== -1;\n\n            startInput.val(convertFromUtcToLocal(dateFormat, startInput.val()));\n            endInput.val(convertFromUtcToLocal(dateFormat, endInput.val()));\n            stagedForm.on('dms-before-submit', function () {\n                submitUtcDateTimeViaHiddenInput(stagedForm, dateFormat, startInput);\n                submitUtcDateTimeViaHiddenInput(stagedForm, dateFormat, endInput);\n            });\n        }\n\n        if (mode === 'time') {\n            config.timePicker = true;\n            config.timePickerSeconds = phpDateFormat.indexOf('s') !== -1;\n        }\n        // TODO: timezoned-date-time\n\n        startInput.daterangepicker(config, function (start, end, label) {\n            if (mode === 'date-time') {\n                start = start.local();\n                end = end.local();\n            }\n\n            startInput.val(start.format(dateFormat));\n            endInput.val(end.format(dateFormat));\n            rangeElement.triggerHandler('dms-range-updated');\n        });\n\n        var picker = startInput.data('daterangepicker');\n\n        if (startInput.val()) {\n            picker.setStartDate(startInput.val());\n        }\n        if (endInput.val()) {\n            picker.setEndDate(endInput.val());\n        }\n\n        endInput.on('focus click', function () {\n            startInput.focus();\n        });\n\n        if (mode === 'time') {\n            rangeElement.parent().find('.calendar-table').hide();\n        }\n\n        startInput.on('apply.daterangepicker', function () {\n            formGroup.trigger('dms-change');\n        });\n\n        claerButton.on('click', function () {\n            startInput.val('');\n            endInput.val('');\n        });\n\n        stagedForm.on('dms-before-submit', function () {\n            formGroup.toggleClass('dms-form-no-submit', !startInput.val() && !endInput.val());\n        });\n    });\n\n    $('.dms-date-or-time-display[data-mode=\"date-time\"]').each(function () {\n        var dateTimeDisplay = $(this);\n        var dateFormat = Dms.utilities.convertPhpDateFormatToMomentFormat(dateTimeDisplay.attr('data-date-format'));\n\n        dateTimeDisplay.text(convertFromUtcToLocal(dateFormat, dateTimeDisplay.text()));\n    });\n\n    $('.dms-date-or-time-range-display[data-mode=\"date-time\"]').each(function () {\n        var dateTimeDisplay = $(this);\n        var startDisplay = dateTimeDisplay.find('.dms-start-display');\n        var endDisplay = dateTimeDisplay.find('.dms-end-display');\n        var dateFormat = Dms.utilities.convertPhpDateFormatToMomentFormat(dateTimeDisplay.attr('data-date-format'));\n\n        startDisplay.text(convertFromUtcToLocal(dateFormat, startDisplay.text()));\n        endDisplay.text(convertFromUtcToLocal(dateFormat, endDisplay.text()));\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    element.find('.dropzone-container').each(function () {\n        var container = $(this);\n        var uniqueId = Dms.utilities.idGenerator();\n        var formGroup = container.closest('.form-group');\n        var form = container.closest('.dms-staged-form');\n        var dropzoneElement = container.find('.dms-dropzone');\n        var fieldName = container.attr('data-name');\n        var required = container.attr('data-required');\n        var tempFilePrefix = container.attr('data-temp-file-key-prefix');\n        var uploadTempFileUrl = container.attr('data-upload-temp-file-url');\n        var maxFileSize = container.attr('data-max-size');\n        var maxFiles = container.attr('max-files');\n        var existingFiles = JSON.parse(container.attr('data-files') || '[]');\n        var isMultiple = container.attr('data-multi-upload');\n\n        var maxImageWidth = container.attr('data-max-width');\n        var minImageWidth = container.attr('data-min-width');\n        var maxImageHeight = container.attr('data-max-height');\n        var minImageHeight = container.attr('data-min-height');\n        var imageEditor = container.find('.dms-image-editor-dialog');\n\n        var getDownloadUrlForFile = function (file) {\n            if (file.downloadUrl) {\n                return file.downloadUrl;\n            }\n\n            if (file.tempFileToken) {\n                return container.attr('data-download-temp-file-url').replace('__token__', file.tempFileToken);\n            }\n\n            return null;\n        };\n\n        var editedImagesQueue = [];\n        var isEditingImage = false;\n\n        var showImageEditor = function (file, saveCallback, alwaysCallback, options) {\n\n            if (isEditingImage) {\n                editedImagesQueue.push(arguments);\n                return;\n            }\n\n            isEditingImage = true;\n            if (!options) {\n                options = {};\n            }\n\n            imageEditor.find('.modal-title').text(options.title || 'Edit Image');\n\n            var canvasContainer = imageEditor.find('.dms-canvas-container');\n\n            var imageSrc = getDownloadUrlForFile(file);\n\n            var loadDarkroom = function (imageSrc) {\n                var imageElement = $('<img />').attr('src', imageSrc);\n                canvasContainer.append(imageElement);\n\n                var darkroom = new Darkroom(imageElement.get(0), $.extend({}, {\n                    plugins: {\n                        save: false // disable plugin\n                    },\n\n                    initialize: function () {\n                        imageEditor.appendTo('body').modal('show');\n                    }\n                }, options));\n\n                imageEditor.find('.btn-save-changes').on('click', function () {\n                    var blob = window.dataURLtoBlob(darkroom.canvas.toDataURL());\n\n                    imageEditor.modal('hide');\n\n                    blob.name = file.name;\n                    saveCallback(blob);\n                    alwaysCallback();\n                });\n\n                imageEditor.on('hide.bs.modal', function () {\n                    canvasContainer.empty();\n                    alwaysCallback();\n\n                    imageEditor.unbind('hide.bs.modal');\n                    imageEditor.find('.btn-save-changes').unbind('click');\n                    imageEditor.appendTo(container);\n\n                    isEditingImage = false;\n\n                    if (editedImagesQueue.length > 0) {\n                        showImageEditor.apply(null, editedImagesQueue.pop());\n                    }\n                });\n            };\n\n            if (imageSrc) {\n                loadDarkroom(imageSrc);\n            } else {\n                var reader = new FileReader();\n\n                reader.addEventListener(\"load\", function () {\n                    loadDarkroom(reader.result);\n                }, false);\n\n                reader.readAsDataURL(file);\n            }\n        };\n\n        var acceptedFiles = JSON.parse(container.attr('data-allowed-extensions') || '[]').map(function (extension) {\n            return '.' + extension;\n        });\n\n        if (container.attr('data-images-only')) {\n            acceptedFiles.push('image/*')\n        }\n\n        dropzoneElement.attr('id', 'dropzone-' + uniqueId);\n        var dropzone = new Dropzone('#dropzone-' + uniqueId, {\n            url: uploadTempFileUrl,\n            paramName: 'file',\n            maxFilesize: maxFileSize,\n            maxFiles: isMultiple ? maxFiles : 1,\n            acceptedFiles: acceptedFiles.join(','),\n\n            init: function () {\n                var dropzone = this;\n\n                this.on(\"addedfile\", function (file) {\n                    var removeButton = Dropzone.createElement(\n                        '<button type=\"button\" class=\"btn btn-sm btn-danger btn-remove-file\"><i class=\"fa fa-times\"></i></button>'\n                    );\n\n                    removeButton.addEventListener('click', function (e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        dropzone.removeFile(file);\n\n                        if (file.action === 'keep-existing') {\n                            file.action = 'delete-existing';\n                        }\n\n                        if (dropzone.options.maxFiles === 0) {\n                            dropzone.options.maxFiles++;\n                        }\n                    });\n\n                    file.previewElement.appendChild(removeButton);\n                });\n\n                this.on(\"removedfile\", function (file) {\n                    if (file.action === 'keep-existing') {\n                        file.action = 'delete-existing';\n                    }\n\n                    formGroup.trigger('dms-change');\n                });\n\n                this.on(\"complete\", function (file) {\n                    var downloadButton = Dropzone.createElement(\n                        '<button type=\"button\" class=\"btn btn-sm btn-success btn-download-file\"><i class=\"fa fa-download\"></i></button>'\n                    );\n\n                    downloadButton.addEventListener('click', function (e) {\n                        e.preventDefault();\n                        e.stopPropagation();\n\n                        Dms.utilities.downloadFileFromUrl(getDownloadUrlForFile(file));\n                    });\n\n                    file.previewElement.appendChild(downloadButton);\n\n                    if (file.width && file.height) {\n                        var editImageButton = Dropzone.createElement(\n                            '<button type=\"button\" class=\"btn btn-sm btn-info btn-edit-file\"><i class=\"fa fa-pencil-square-o\"></i></button>'\n                        );\n\n                        editImageButton.addEventListener('click', function (e) {\n                            e.preventDefault();\n                            e.stopPropagation();\n                            $(editImageButton).prop('disabled', true);\n\n                            showImageEditor(file, function (newFile) {\n                                dropzone.removeFile(file);\n\n                                if (dropzone.options.maxFiles === 0) {\n                                    dropzone.options.maxFiles++;\n                                }\n\n                                dropzone.addFile(newFile);\n                            }, function () {\n                                $(editImageButton).prop('disabled', false);\n                            });\n                        });\n\n                        file.previewElement.appendChild(editImageButton);\n                    }\n\n                    formGroup.trigger('dms-change');\n                });\n\n                this.on('success', function (file, response) {\n                    file.action = 'store-new';\n                    file.tempFileToken = response.tokens['file'];\n                });\n\n                this.on(\"thumbnail\", function (file) {\n                    if (!file.acceptDimensions && !file.rejectDimensions) {\n                        return;\n                    }\n\n                    if ((maxImageWidth && file.width > maxImageWidth) || (maxImageHeight && file.height > maxImageHeight)\n                        || (minImageWidth && file.width < minImageWidth) || (minImageHeight && file.height < minImageHeight)) {\n                        file.rejectDimensions();\n                    }\n                    else {\n                        file.acceptDimensions();\n                    }\n                });\n\n                $.each(existingFiles, function (index, existingFile) {\n                    existingFile.originalIndex = index;\n                    existingFile.action = 'keep-existing';\n                    existingFile.tempFileToken = null;\n\n                    dropzone.emit(\"addedfile\", existingFile);\n                    dropzone.createThumbnailFromUrl(existingFile, existingFile.previewUrl);\n                    dropzone.emit(\"complete\", existingFile);\n\n                    if (dropzone.options.maxFiles > 0) {\n                        dropzone.options.maxFiles--;\n                    }\n                });\n\n            },\n\n            accept: function (file, done) {\n                if (file.type.indexOf('image') === -1) {\n                    done();\n                }\n\n                file.acceptDimensions = done;\n                file.rejectDimensions = function () {\n                    showImageEditor(file, function (editedFile) {\n                        dropzone.addFile(editedFile);\n                    }, function () {\n                        try {\n                            dropzone.removeFile(file);\n                        } catch (e) {\n                        }\n                    }, {\n                        title: 'The supplied image does not match the required dimensions so it has been resized to: (' + formatRequiredDimensions(file) + ')',\n                        minWidth: minImageWidth,\n                        minHeight: minImageHeight,\n                        maxWidth: maxImageWidth,\n                        maxHeight: maxImageHeight\n                    })\n                };\n            }\n        });\n\n        dropzone.on('sending', function (file, xhr, formData) {\n            $.each(Dms.utilities.getCsrfHeaders(), function (name, value) {\n                xhr.setRequestHeader(name, value);\n            });\n        });\n\n        var formatRequiredDimensions = function (file) {\n            var min = '', max = '';\n\n            if (minImageWidth && minImageHeight) {\n                min = 'min: ' + minImageWidth + 'x' + minImageHeight + 'px';\n            }\n            else if (minImageWidth) {\n                min = 'min width: ' + minImageWidth + 'px';\n            }\n            else if (minImageHeight) {\n                min = 'min height: ' + minImageHeight + 'px';\n            }\n\n            if (maxImageWidth && maxImageHeight) {\n                max = 'max: ' + maxImageWidth + 'x' + maxImageHeight + 'px';\n            }\n            else if (maxImageWidth) {\n                max = 'max width: ' + maxImageWidth + 'px';\n            }\n            else if (minImageHeight) {\n                max = 'max height: ' + minImageHeight + 'px';\n            }\n\n            return (min + ' ' + max).trim();\n        };\n\n        dropzoneElement.addClass('dropzone');\n\n        formGroup.on('dms-get-input-data', function () {\n            var fieldData = {};\n            \n            var allFiles = [];\n\n            $.each(existingFiles.concat(dropzone.getAcceptedFiles()), function (index, file) {\n                if (file.action === 'delete-existing') {\n                    return;\n                }\n\n                if (typeof file.originalIndex !== 'undefined') {\n                    allFiles[file.originalIndex] = file;\n                    return;\n                }\n\n                while (typeof allFiles[index] !== 'undefined') {\n                    index++;\n                }\n\n                allFiles[index] = file;\n            });\n\n            $.each(allFiles, function (index, file) {\n                if (!file) {\n                    return;\n                }\n\n                var fileFieldName;\n                fileFieldName = isMultiple\n                    ? fieldName + '[' + index + ']'\n                    : fieldName;\n\n                fieldData[fileFieldName + '[action]'] = file.action;\n\n                if (file.tempFileToken) {\n                    fieldData[Dms.utilities.combineFieldNames(tempFilePrefix, fileFieldName + '[file]')] = file.tempFileToken;\n                }\n            });\n\n            return fieldData;\n        });\n\n        dropzoneElement.closest('.dms-staged-form').on('dms-post-submit-success', function () {\n            dropzone.destroy();\n        });\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('.dms-inner-form').each(function () {\n        var innerForm = $(this);\n\n        if (innerForm.attr('data-readonly')) {\n            innerForm.find(':input').attr('readonly', 'readonly');\n        }\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('.dms-inner-module, .dms-display-inner-module').each(function () {\n        var innerModule = $(this);\n\n        if (innerModule.data('dms-has-initialized-form')) {\n            return;\n        } else {\n            innerModule.data('dms-has-initialized-form', true);\n        }\n\n        var fieldName = innerModule.attr('data-name');\n        var formGroup = innerModule.closest('.form-group');\n        var rootUrl = innerModule.attr('data-root-url');\n        var isDisplayOnly = innerModule.attr('data-display-only');\n        var reloadStateUrl = rootUrl + '/state';\n        var innerModuleFormContainer = innerModule.find('.dms-inner-module-form-container');\n        var innerModuleForm = innerModuleFormContainer.find('.dms-inner-module-form');\n        var formStage = innerModule.closest('.dms-form-stage');\n        var stagedForm = innerModule.closest('.dms-staged-form');\n        var currentValue = JSON.parse(innerModule.attr('data-value') || '[]');\n\n        if (innerModule.attr('data-readonly')) {\n            innerModule.find(':input').attr('readonly', 'readonly');\n        }\n\n        var fieldDataPrefix = '__field_action_data';\n        var interceptor;\n\n        Dms.ajax.interceptors.push(interceptor = {\n            accepts: function (options) {\n                return options.url.indexOf(rootUrl) === 0 && options.url !== reloadStateUrl;\n            },\n            before: function (options) {\n                var formData;\n\n                if (isDisplayOnly) {\n                    formData = Dms.ajax.createFormData();\n                    formData.append('__initial_dependent_data', '1')\n                } else {\n                    formData = Dms.form.stages.getDependentDataForStage(formStage);\n                }\n\n\n                formData.append(fieldDataPrefix + '[current_state]', JSON.stringify(currentValue));\n                formData.append(fieldDataPrefix + '[request][url]', options.url.substring(rootUrl.length));\n                formData.append(fieldDataPrefix + '[request][method]', options.__emulatedType || options.type || 'get');\n\n                var parametersPrefix = fieldDataPrefix + '[request][parameters]';\n                $.each(Dms.ajax.parseData(options.data), function (name, entries) {\n                    $.each(entries, function (index, entry) {\n                        formData.append(Dms.utilities.combineFieldNames(parametersPrefix, name), entry.value, entry.filename);\n                    });\n                });\n\n                options.__originalDataType = options.dataType;\n                options.dataType = 'json';\n                if ((options.type || 'get').toLowerCase() === 'get') {\n                    options.data = formData.toQueryString();\n                } else {\n                    options.processData = false;\n                    options.contentType = false;\n                    options.data = formData;\n                }\n            },\n            after: function (options, response, data) {\n                if (response.statusText === 'abort') {\n                    return;\n                }\n\n                if (data) {\n                    currentValue = data['new_state'];\n\n                    return Dms.ajax.convertResponse(options.__originalDataType, data.response);\n                } else {\n                    data = JSON.parse(response.responseText);\n                    currentValue = data['new_state'];\n\n                    response.responseText = data.response;\n                    console.log(response.responseText);\n                }\n            }\n        });\n\n        var originalResponseHandler = Dms.action.responseHandler;\n        Dms.action.responseHandler = function (httpStatusCode, actionUrl, response) {\n            if (actionUrl.indexOf(rootUrl) !== 0 || httpStatusCode >= 400) {\n                originalResponseHandler(httpStatusCode, actionUrl, response);\n                return;\n            }\n\n            if (response.redirect) {\n                var redirectUrl = response.redirect;\n                delete response.redirect;\n\n                if (!Dms.utilities.areUrlsEqual(redirectUrl, rootUrl)) {\n                    loadModulePage(redirectUrl);\n                }\n            }\n\n            originalResponseHandler(httpStatusCode, actionUrl, response);\n\n            innerModule.find('.dms-table-control .dms-table').triggerHandler('dms-load-table-data');\n            innerModuleForm.empty();\n            formGroup.trigger('dms-change');\n        };\n\n        var rootActionUrl = rootUrl + '/action/';\n        var currentAjaxRequest;\n\n        var loadModulePage = function (url) {\n            innerModuleFormContainer.addClass('loading');\n            Dms.utilities.scrollToView(innerModuleFormContainer);\n\n            if (currentAjaxRequest) {\n                currentAjaxRequest.abort();\n            }\n\n            currentAjaxRequest = Dms.ajax.createRequest({\n                url: url,\n                type: 'post',\n                __emulatedType: 'get',\n                dataType: 'html',\n                data: {'__content_only': 1}\n            });\n\n            currentAjaxRequest.done(function (html) {\n                innerModuleForm.html(html);\n                innerModuleForm.find('[data-reload-page-after-submit]').removeAttr('data-reload-page-after-submit');\n                Dms.form.initialize(innerModuleForm);\n            });\n\n            currentAjaxRequest.fail(function (response) {\n                if (currentAjaxRequest.statusText === 'abort') {\n                    return;\n                }\n\n                Dms.controls.showErrorDialog({\n                    title: \"Could not load form\",\n                    text: \"An unexpected error occurred\",\n                    type: \"error\",\n                    debugInfo: response.responseText\n                });\n            });\n\n            currentAjaxRequest.always(function () {\n                innerModuleFormContainer.removeClass('loading');\n                currentAjaxRequest = null;\n            });\n        };\n\n        innerModule.on('click', 'a[href^=\"' + rootActionUrl + '\"]', function (e) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n            var link = $(this);\n\n            loadModulePage(link.attr('href'));\n        });\n\n        innerModule.closest('.form-group').on('dms-get-input-data', function () {\n            var fieldData = {};\n            fieldData[fieldName] = currentValue;\n            return fieldData;\n        });\n\n        innerModule.closest('.form-group').on('dms-set-input-data', function (event, fieldData) {\n            var newValue = fieldData[fieldName] || [];\n\n            if (currentValue != newValue) {\n                currentValue = newValue;\n                innerModule.find('.dms-table').triggerHandler('dms-load-table-data');\n            }\n        });\n\n        stagedForm.on('dms-before-submit', function () {\n            innerModuleForm.empty();\n        });\n\n        var hasReset = false;\n        var resetAjaxInterception = function () {\n            if (hasReset) {\n                return;\n            } else {\n                hasReset = true;\n            }\n\n            Dms.ajax.interceptors.splice(Dms.ajax.interceptors.indexOf(interceptor), 1);\n            Dms.action.responseHandler = originalResponseHandler;\n        };\n\n        formStage.on('dms-stage-reload', resetAjaxInterception);\n        stagedForm.on('dms-post-submit-success', resetAjaxInterception);\n        innerModule.closest('.dms-page-content').on('dms-page-unloading', resetAjaxInterception);\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    element.find('ul.dms-field-list').each(function () {\n        var listOfFields = $(this);\n        var form = listOfFields.closest('.dms-staged-form');\n        var formGroup = listOfFields.closest('.form-group');\n        var templateField = listOfFields.children('.field-list-template');\n        var addButton = listOfFields.children('.field-list-add').find('.btn-add-field');\n        var guid = Dms.utilities.idGenerator();\n        var isInvalidating = false;\n\n        var minFields = listOfFields.attr('data-min-elements');\n        var maxFields = listOfFields.attr('data-max-elements');\n\n        var getAmountOfInputs = function () {\n            return listOfFields.children('.field-list-item').length;\n        };\n\n        var invalidateControl = function () {\n            if (isInvalidating) {\n                return;\n            }\n\n            isInvalidating = true;\n\n            var amountOfInputs = getAmountOfInputs();\n\n            addButton.prop('disabled', amountOfInputs >= maxFields);\n            listOfFields.find('.dms-remove-field-button').prop('disabled', amountOfInputs <= minFields);\n\n            while (amountOfInputs < minFields) {\n                addNewField();\n                amountOfInputs++;\n            }\n\n            isInvalidating = false;\n        };\n\n        var reindexFields = function () {\n            // TODO\n        };\n\n        var addNewField = function () {\n            var newField = templateField.clone()\n                .removeClass('field-list-template')\n                .removeClass('hidden')\n                .removeClass('dms-form-no-submit')\n                .addClass('field-list-item');\n\n            var fieldInputElement = newField.find('.field-list-input');\n            fieldInputElement.html(fieldInputElement.text());\n\n            var currentIndex = getAmountOfInputs();\n\n            $.each(['name', 'data-name', 'data-field-name'], function (index, attr) {\n                fieldInputElement.find('[' + attr + '*=\"::index::\"]').each(function () {\n                    $(this).attr(attr, $(this).attr(attr).replace('::index::', currentIndex));\n                });\n            });\n\n            addButton.closest('.field-list-add').before(newField);\n\n            Dms.form.initialize(fieldInputElement);\n            form.triggerHandler('dms-form-updated');\n\n            invalidateControl();\n        };\n\n        listOfFields.on('click', '.dms-remove-field-button', function () {\n            var field = $(this).closest('.field-list-item');\n            field.remove();\n            formGroup.trigger('dms-change');\n            form.triggerHandler('dms-form-updated');\n\n            invalidateControl();\n            reindexFields();\n        });\n\n        addButton.on('click', addNewField);\n\n        invalidateControl();\n\n        var requiresAnExactAmountOfFields = typeof minFields !== 'undefined' && minFields === maxFields;\n        if (requiresAnExactAmountOfFields && getAmountOfInputs() == minFields) {\n            addButton.closest('.field-list-add').remove();\n            listOfFields.find('.dms-remove-field-button').closest('.field-list-button-container').remove();\n            listOfFields.find('.field-list-input').removeClass('col-xs-10 col-md-11').addClass('col-xs-12');\n        }\n\n        // Sorting\n        var sortable = new Sortable(listOfFields.get(0), {\n            group: \"sortable-field-list-\" + guid,\n            sort: true,  // sorting inside list\n            animation: 150,  // ms, animation speed moving items when sorting, `0` — without animation\n            handle: \".dms-reorder-field-button\",  // Drag handle selector within list items\n            draggable: \".list-group-item\",  // Specifies which items inside the element should be sortable\n            ghostClass: \"sortable-ghost\",  // Class name for the drop placeholder\n            chosenClass: \"sortable-chosen\",  // Class name for the chosen item\n            dataIdAttr: 'data-id',\n            onEnd: function (event) {\n                reindexFields();\n                formGroup.trigger('dms-change');\n            }\n        });\n\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('.dms-money-input-group').each(function () {\n        var inputGroup = $(this);\n        var moneyInput = inputGroup.find('.dms-money-input');\n        var currencyInput = inputGroup.find('.dms-currency-input');\n\n        moneyInput.attr({\n            'type': 'number',\n            'data-parsley-type': 'number'\n        });\n\n        var updateDecimalDigits = function () {\n            var selectedOption = currencyInput.children('option:selected');\n\n            var decimalDigits = selectedOption.attr('data-fractional-digits');\n            moneyInput.attr('step', Math.pow(0.1, decimalDigits).toFixed(decimalDigits));\n        };\n\n        currencyInput.on('change', updateDecimalDigits);\n        updateDecimalDigits();\n\n        var updateShouldSubmitData = function () {\n            inputGroup.toggleClass('dms-form-no-submit', moneyInput.val() === '');\n        };\n\n        moneyInput.on('change input', updateShouldSubmitData);\n        updateShouldSubmitData();\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    var disableZoomScrollingUntilHoveredFor = function (milliseconds, googleMap) {\n        googleMap.set('scrollwheel', false);\n        var timeout;\n        $(googleMap.getDiv()).hover(function () {\n                timeout = setTimeout(function () {\n                    googleMap.set('scrollwheel', true);\n                }, milliseconds);\n            },\n            function () {\n                clearTimeout(timeout);\n                googleMap.set('scrollwheel', false);\n            });\n    };\n\n    element.find('.dms-map-input').each(function () {\n        var mapInput = $(this);\n\n        var inputMode = mapInput.attr('data-input-mode');\n        var latitudeInput = mapInput.find('input.dms-lat-input');\n        var longitudeInput = mapInput.find('input.dms-lng-input');\n        var currentLocationButton = mapInput.find('.dms-current-location');\n        var fullAddressInput = mapInput.find('input.dms-full-address-input');\n        var addressSearchInput = mapInput.find('input.dms-address-search');\n        var mapCanvas = mapInput.find('.dms-map-picker');\n        var forceSetAddress = false;\n\n        var addressPicker = new AddressPicker({\n            regionBias: 'AUS',\n            map: {\n                id: mapCanvas.get(0),\n                zoom: 12,\n                center: new google.maps.LatLng(\n                    latitudeInput.val() || mapInput.attr('data-default-latitude') || -26.4390917,\n                    longitudeInput.val() || mapInput.attr('data-default-longitude') || 133.281323), // Default to australia\n                mapTypeId: google.maps.MapTypeId.ROADMAP,\n                draggable: !(mapCanvas.attr('data-no-touch-drag') && Dms.utilities.isTouchDevice())\n            },\n            marker: {\n                draggable: true,\n                visible: true\n            },\n            reverseGeocoding: true,\n            autocompleteService: {\n                autocompleteService: {\n                    types: ['(cities)', '(regions)', 'geocode', 'establishment']\n                }\n            }\n        });\n        mapCanvas.data('map-api', addressPicker.getGMap());\n\n        addressSearchInput.typeahead(null, {\n            displayKey: 'description',\n            source: addressPicker.ttAdapter()\n        });\n\n        addressSearchInput.bind(\"typeahead:selected\", addressPicker.updateMap);\n        addressSearchInput.bind(\"typeahead:cursorchanged\", addressPicker.updateMap);\n        addressPicker.bindDefaultTypeaheadEvent(addressSearchInput);\n\n        $(addressPicker).on('addresspicker:selected', function (event, result) {\n            if (!forceSetAddress && addressSearchInput.val() === '') {\n                addressSearchInput.typeahead('val', '');\n                latitudeInput.val('');\n                longitudeInput.val('');\n                fullAddressInput.val('');\n                return;\n            }\n\n            forceSetAddress = false;\n\n            if (addressSearchInput.is('[data-map-zoom]')) {\n                addressPicker.getGMap().setCenter(new google.maps.LatLng(result.lat(), result.lng()));\n                addressPicker.getGMap().setZoom(parseInt(addressSearchInput.attr('data-map-zoom'), 10));\n            }\n            latitudeInput.val(result.lat());\n            longitudeInput.val(result.lng());\n            var address = result.address();\n\n            if (result.placeResult.name && address.indexOf(result.placeResult.name) === -1) {\n                address = result.placeResult.name + ', ' + address;\n            }\n\n            addressSearchInput.val(address);\n            fullAddressInput.val(address);\n        });\n\n        google.maps.event.addListener(addressPicker.getGMarker(), \"dragend\", function (event) {\n            forceSetAddress = true;\n        });\n\n        var triggerReverseGeocode = function () {\n            forceSetAddress = true;\n            addressPicker.markerDragged();\n            addressPicker.getGMap().setZoom(12);\n        };\n\n        if (navigator.geolocation) {\n            currentLocationButton.click(function () {\n                navigator.geolocation.getCurrentPosition(function (position) {\n                    var location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);\n                    addressPicker.getGMarker().setPosition(location);\n                    addressPicker.getGMap().setCenter(location);\n                    triggerReverseGeocode();\n                });\n            });\n        } else {\n            currentLocationButton.prop('disabled', true);\n        }\n\n        if (latitudeInput.val() || longitudeInput.val()) {\n            if (inputMode === 'lat-lng') {\n                forceSetAddress = true;\n                addressPicker.markerDragged();\n            }\n\n            if (inputMode === 'address-with-lat-lng') {\n                var location = new google.maps.LatLng(latitudeInput.val(), longitudeInput.val());\n                addressPicker.getGMarker().setPosition(location);\n                addressPicker.getGMap().setCenter(location);\n                addressSearchInput.val(fullAddressInput.val());\n            }\n        }\n\n        addressSearchInput.change(function () {\n            addressPicker.markerDragged();\n        });\n\n        disableZoomScrollingUntilHoveredFor(1000, addressPicker.getGMap());\n\n        google.maps.event.addListenerOnce(addressPicker.getGMap(), 'idle', function(){\n            if (fullAddressInput.val()) {\n                addressSearchInput.typeahead('val', fullAddressInput.val());\n            }\n        });\n\n        if (inputMode === 'address' && fullAddressInput.val()) {\n            var geocoder = new google.maps.Geocoder();\n            geocoder.geocode({'address': fullAddressInput.val()}, function (results, status) {\n                if (status == google.maps.GeocoderStatus.OK) {\n                    addressPicker.getGMap().setCenter(results[0].geometry.location);\n                    addressPicker.getGMarker().setPosition(results[0].geometry.location);\n                }\n            });\n        }\n    });\n\n    $('.dms-display-map').each(function () {\n        var mapCanvas = $(this);\n\n        var location = new google.maps.LatLng(mapCanvas.attr('data-latitude'), mapCanvas.attr('data-longitude'));\n        var map = new google.maps.Map(mapCanvas.get(0), {\n            center: location,\n            zoom: parseInt(mapCanvas.attr('data-zoom'), 10) || 14,\n            scrollwheel: false\n        });\n\n        disableZoomScrollingUntilHoveredFor(1000, map);\n\n        mapCanvas.data('map-api', map);\n\n        var marker = new google.maps.Marker({\n            position: location,\n            map: map,\n            title: mapCanvas.attr('data-title')\n        });\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('select[multiple]').multiselect({\n        enableFiltering: true,\n        includeSelectAllOption: true\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('input[type=\"number\"][data-max-decimal-places]').each(function () {\n        $(this).attr('data-parsley-max-decimal-places', $(this).attr('data-max-decimal-places'));\n    });\n\n    element.find('input[type=\"number\"][data-greater-than]').each(function () {\n        $(this).attr('data-parsley-gt', $(this).attr('data-greater-than'));\n    });\n\n    element.find('input[type=\"number\"][data-less-than]').each(function () {\n        $(this).attr('data-parsley-lt', $(this).attr('data-less-than'));\n    });\n\n    element.find('input[type=\"number\"]').each(function () {\n        if ($(this).attr('data-decimal-number')) {\n            $(this).attr({\n                'type': $(this).attr('step') ? 'number' : 'text',\n                'data-parsley-type': 'number'\n            });\n        } else {\n            $(this).attr({\n                'data-parsley-type': 'integer'\n            });\n        }\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('input[type=radio]').iCheck({\n        radioClass: 'iradio_square-blue',\n        increaseArea: '20%'\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('.dms-select-with-remote-data').each(function () {\n        var control = $(this);\n        var formStage = control.closest('.dms-form-stage')\n        var input = control.find('.dms-select-input');\n        var hiddenInput = control.find('.dms-select-hidden-input');\n        var formGroup = control.closest('.form-group');\n\n        var remoteDataUrl = control.attr('data-remote-options-url');\n        var remoteMinChars = control.attr('data-remote-min-chars');\n\n        var currentRequest = null;\n\n        input.typeahead(null, {\n            displayKey: 'label',\n            hint: true,\n            highlight: true,\n            minLength: remoteMinChars,\n            source: Dms.utilities.debounceCallback(function (query, callback) {\n                if (currentRequest) {\n                    currentRequest.abort();\n                }\n\n                var formData = Dms.form.stages.getDependentDataForStage(formStage);\n\n                currentRequest = Dms.ajax.createRequest({\n                    url: remoteDataUrl + '?query=' + encodeURIComponent(query),\n                    type: 'POST',\n                    dataType: 'json',\n                    cache: false,\n                    processData: false,\n                    contentType: false,\n                    data: formData\n                });\n\n                currentRequest.done(function (results) {\n                    callback(results);\n                });\n            }, 500)\n        }).on('typeahead:selected', function (event, data) {\n            hiddenInput.val(data.val);\n            formGroup.trigger('dms-change');\n        });\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n    element.find('input[type=\"ip-address\"]')\n        .attr('type', 'text')\n        .attr('data-parsley-ip-address', '1');\n\n    element.find('input[data-autocomplete]').each(function () {\n        var options = JSON.parse($(this).attr('data-autocomplete'));\n        $(this).removeAttr('data-autocomplete');\n\n        var values = [];\n\n        $.each(options, function (index, value) {\n            values.push({ val: value });\n        });\n\n        var engine = new Bloodhound({\n            local: values,\n            datumTokenizer: function(d) {\n                return Bloodhound.tokenizers.whitespace(d.val);\n            },\n            queryTokenizer: Bloodhound.tokenizers.whitespace\n        });\n\n        engine.initialize();\n\n        $(this).typeahead( {\n            limit: 5,\n            hint: true,\n            highlight: true,\n            minLength: 1\n        }, {\n            source: engine.ttAdapter(),\n            displayKey: 'val'\n        });\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n    element.find('table.dms-field-table').each(function () {\n        var tableOfFields = $(this);\n        var form = tableOfFields.closest('.dms-staged-form');\n        var formGroup = tableOfFields.closest('.form-group');\n\n        var columnFieldTemplate = tableOfFields.find('.field-column-template');\n        var rowFieldTemplate = tableOfFields.find('.field-row-template');\n        var cellFieldTemplate = tableOfFields.find('.field-cell-template');\n        var removeRowTemplate = tableOfFields.find('.remove-row-template');\n        var removeColumnTemplate = tableOfFields.find('.remove-column-template');\n\n        var addColumnButton = tableOfFields.find('.btn-add-column');\n        var addRowButton = tableOfFields.find('.btn-add-row');\n\n        var hasPredefinedColumns = tableOfFields.attr('data-has-predefined-columns');\n        var hasPredefinedRows = tableOfFields.attr('data-has-predefined-rows');\n        var hasRowField = tableOfFields.attr('data-has-row-field');\n\n        var isInvalidating = false;\n\n        var minColumns = tableOfFields.attr('data-min-columns') || 1;\n        var maxColumns = tableOfFields.attr('data-max-columns');\n\n        var minRows = tableOfFields.attr('data-min-rows');\n        var maxRows = tableOfFields.attr('data-max-rows');\n\n        var getAmountOfColumns = function () {\n            return tableOfFields.find('thead .table-column').length;\n        };\n\n        var getAmountOfRows = function () {\n            return tableOfFields.find('tbody .table-row').length;\n        };\n\n        var invalidateControl = function () {\n            if (isInvalidating) {\n                return;\n            }\n\n            isInvalidating = true;\n\n            var amountOfColumns = getAmountOfColumns();\n            var amountOfRows = getAmountOfRows();\n\n            addColumnButton.prop('disabled', amountOfColumns >= maxColumns);\n            tableOfFields.find('.btn-remove-column').prop('disabled', amountOfColumns <= minColumns);\n\n            while (amountOfColumns < minColumns) {\n                addNewColumn();\n                amountOfColumns++;\n            }\n\n            addRowButton.prop('disabled', amountOfRows >= maxRows);\n            tableOfFields.find('.btn-remove-row').prop('disabled', amountOfRows <= minRows);\n\n            while (amountOfRows < minRows) {\n                addNewRow();\n                amountOfRows++;\n            }\n\n            isInvalidating = false;\n        };\n\n        var createNewCell = function (columnIndex, rowIndex) {\n            var newCell = cellFieldTemplate.clone().removeClass('field-cell-template');\n\n            newCell.html(newCell.text());\n\n            $.each(['name', 'data-name', 'data-field-name'], function (index, attr) {\n                newCell.find('[' + attr + '*=\"::column::\"]').each(function () {\n                    $(this).attr(attr, $(this).attr(attr).replace('::column::', columnIndex));\n                });\n\n                newCell.find('[' + attr + '*=\"::row::\"]').each(function () {\n                    $(this).attr(attr, $(this).attr(attr).replace('::row::', rowIndex));\n                });\n            });\n\n            return newCell;\n        };\n\n        var addNewColumn = function () {\n            var newColumnHeader = columnFieldTemplate.clone().removeClass('field-column-template');\n\n            var fieldContent = newColumnHeader.find('.field-content');\n            fieldContent.html(fieldContent.text());\n\n            var currentRow = 0;\n            var currentColumn = getAmountOfColumns();\n\n            $.each(['name', 'data-name', 'data-field-name'], function (index, attr) {\n                newColumnHeader.find('[' + attr + '*=\"::column::\"]').each(function () {\n                    $(this).attr(attr, $(this).attr(attr).replace('::column::', currentColumn));\n                });\n            });\n\n            var elementsToInit = $(newColumnHeader);\n\n            addColumnButton.closest('.add-column').before(newColumnHeader);\n\n            tableOfFields.find('tr.table-row').each(function (index, row) {\n                var newCell = createNewCell(currentColumn, currentRow);\n\n                $(row).find('.add-column').before(newCell);\n                elementsToInit.add(newCell);\n\n                currentRow++;\n            });\n\n            tableOfFields.find('.add-row .add-column').before(removeColumnTemplate.clone().removeClass('remove-column-button'));\n\n            Dms.form.initialize(elementsToInit);\n\n            form.triggerHandler('dms-form-updated');\n\n            invalidateControl();\n        };\n\n        var addNewRow = function () {\n            var currentRow = getAmountOfRows();\n            var currentColumn = 0;\n            var newRow = $('<tr/>').addClass('table-row');\n\n            if (hasRowField) {\n                var newRowHeader = rowFieldTemplate.clone().removeClass('field-row-template');\n\n                var fieldContent = newRowHeader.find('.field-content');\n                fieldContent.html(fieldContent.text());\n\n                $.each(['name', 'data-name', 'data-field-name'], function (index, attr) {\n                    newRowHeader.find('[' + attr + '*=\"::row::\"]').each(function () {\n                        $(this).attr(attr, $(this).attr(attr).replace('::row::', currentRow));\n                    });\n                });\n\n                newRow.append(newRowHeader);\n            }\n\n            var amountOfColumns = getAmountOfColumns();\n            for (currentColumn = 0; currentColumn < amountOfColumns; currentColumn++) {\n                newRow.append(createNewCell(currentColumn, currentRow));\n            }\n\n            newRow.append(removeRowTemplate.clone().removeClass('remove-row-template'));\n\n            tableOfFields.find('tr.add-row').before(newRow);\n\n            Dms.form.initialize(newRow);\n\n            form.triggerHandler('dms-form-updated');\n\n            invalidateControl();\n        };\n\n        tableOfFields.on('click', '.btn-remove-column', function () {\n            var parentCell = $(this).closest('td, th');\n            var columnIndex = parentCell.prevAll('td, th').length;\n            tableOfFields.find('tr').each(function () {\n                $(this).find('td:not(.add-column), th:not(.add-column)').eq(columnIndex).remove();\n            });\n            parentCell.remove();\n\n            formGroup.trigger('dms-change');\n            form.triggerHandler('dms-form-updated');\n\n            invalidateControl();\n            // TODO: reindex\n        });\n\n        tableOfFields.on('click', '.btn-remove-row', function () {\n            $(this).closest('tr').remove();\n\n            formGroup.trigger('dms-change');\n            form.triggerHandler('dms-form-updated');\n\n            invalidateControl();\n            // TODO: reindex\n        });\n\n        addColumnButton.on('click', addNewColumn);\n        addRowButton.on('click', addNewRow);\n\n        invalidateControl();\n\n        var requiresAnExactAmountOfColumns = typeof minColumns !== 'undefined' && minColumns === maxColumns;\n        var requiresAnExactAmountOfRows = typeof minRows !== 'undefined' && minRows === maxRows;\n\n        if (hasPredefinedColumns || (requiresAnExactAmountOfColumns && getAmountOfColumns() == minColumns)) {\n            addColumnButton.remove();\n            tableOfFields.find('.btn-remove-column').remove();\n            tableOfFields.find('.btn-add-column').remove();\n        }\n\n        if (hasPredefinedRows || (requiresAnExactAmountOfRows && getAmountOfRows() == minRows)) {\n            addRowButton.remove();\n            tableOfFields.find('.btn-remove-row').remove();\n            tableOfFields.find('.btn-add-row').remove();\n        }\n    });\n});","Dms.form.initializeCallbacks.push(function (element) {\n\n});","Dms.form.initializeCallbacks.push(function (element) {\n    if (typeof tinymce === 'undefined') {\n        return;\n    }\n\n    var wysiwygElements = element.find('textarea.dms-wysiwyg, textarea.dms-wysiwyg-light');\n\n    wysiwygElements.each(function () {\n        if (!$(this).attr('id')) {\n            $(this).attr('id', Dms.utilities.idGenerator());\n        }\n    });\n\n    tinymce.baseURL = '/vendor/dms/wysiwyg/';\n\n    var setupTinyMce = function (editor) {\n        editor.on('change', function () {\n            editor.save();\n        });\n\n        editor.on('keyup cut paste change', function (e) {\n            $(tinymce.activeEditor.getElement()).closest('.form-group').trigger('dms-change');\n        });\n    };\n\n    var filePickerCallback = function (callback, value, meta) {\n        var wysiwygElement = $(tinymce.activeEditor.getElement()).closest('.dms-wysiwyg-container');\n        showFilePickerDialog(meta.filetype, wysiwygElement, function (fileUrl) {\n            callback(fileUrl);\n        });\n    };\n\n    tinymce.init({\n        selector: 'textarea.dms-wysiwyg',\n        tooltip: '',\n        plugins: [\n            \"advlist\",\n            \"autolink\",\n            \"lists\",\n            \"link\",\n            \"image\",\n            \"charmap\",\n            \"textcolor\",\n            \"print\",\n            \"preview\",\n            \"anchor\",\n            \"searchreplace\",\n            \"visualblocks\",\n            \"code\",\n            \"insertdatetime\",\n            \"media\",\n            \"table\",\n            \"contextmenu\",\n            \"paste\",\n            \"imagetools\"\n        ],\n        toolbar: \"undo redo | styleselect | bold italic | forecolor backcolor | alignleft aligncenter alignright alignjustify | bullist numlist | link image\",\n        setup: setupTinyMce,\n        relative_urls: false,\n        remove_script_host: true,\n        file_picker_callback: filePickerCallback\n    });\n\n    tinymce.init({\n        selector: 'textarea.dms-wysiwyg-light',\n        tooltip: '',\n        toolbar: 'undo redo | bold italic | link',\n        menubar: false,\n        statusbar: false,\n        plugins: [\n            \"autolink\",\n            \"link\",\n            \"textcolor\"\n        ],\n        setup: setupTinyMce,\n        relative_urls: false,\n        remove_script_host: true,\n        file_picker_callback: filePickerCallback\n    });\n\n    wysiwygElements.filter(function () {\n        return $(this).closest('.mce-tinymce').length === 0;\n    }).each(function () {\n        tinymce.EditorManager.execCommand('mceAddEditor', true, $(this).attr('id'));\n    });\n\n    wysiwygElements.closest('.dms-staged-form').on('dms-post-submit-success', function () {\n        $(this).find('textarea.dms-wysiwyg').each(function () {\n            tinymce.remove('#' + $(this).attr('id'));\n        });\n    });\n\n    var showFilePickerDialog = function (mode, wysiwygElement, callback) {\n        var loadFilePickerUrl = wysiwygElement.attr('data-load-file-picker-url');\n        var filePickerDialog = wysiwygElement.find('.dms-file-picker-dialog');\n        var filePickerContainer = filePickerDialog.find('.dms-file-picker-container');\n        var filePicker = filePickerContainer.find('.dms-file-picker');\n\n        filePickerDialog.appendTo('body').modal('show');\n        filePickerDialog.on('hidden.bs.modal', function () {\n            filePickerDialog.appendTo(wysiwygElement);\n        });\n\n        var request = Dms.ajax.createRequest({\n            url: loadFilePickerUrl,\n            type: 'get',\n            dataType: 'html',\n            data: {'__content_only': '1'}\n        });\n\n        filePickerContainer.addClass('loading');\n\n        request.done(function (html) {\n            filePicker.html(html);\n            Dms.table.initialize(filePicker);\n            Dms.form.initialize(filePicker);\n\n            var updateFilePickerButtons = function () {\n                filePicker.find('.dms-trashed-files-btn-container').hide();\n                var selectFileButton = $('<button class=\"btn btn-success btn-xs\"><i class=\"fa fa-check\"></i></button>');\n\n                filePicker.find('.dms-file-action-buttons').each(function () {\n                    var fileItemButtons = $(this);\n\n                    var specificFileSelectButton = selectFileButton.clone();\n                    fileItemButtons.empty();\n                    fileItemButtons.append(specificFileSelectButton);\n\n                    specificFileSelectButton.on('click', function () {\n                        callback(fileItemButtons.closest('.dms-file-item').attr('data-public-url'));\n                        filePickerDialog.modal('hide');\n                    });\n                });\n\n                if (mode === 'image') {\n                    filePicker.find('.btn-images-only').click().focus();\n                }\n            };\n\n            filePicker.find('.dms-file-tree').on('dms-file-tree-updated', updateFilePickerButtons);\n            updateFilePickerButtons();\n        });\n\n        request.always(function () {\n            filePickerContainer.removeClass('loading');\n        });\n\n        filePickerDialog.on('hide.bs.modal', function () {\n            filePicker.empty();\n        });\n    };\n\n\n    element.find('.dms-display-html').each(function () {\n        var control = $(this);\n        var viewMoreButton = control.find('.dms-view-more-button');\n        var iframe = control.find('iframe');\n        var htmlDocument = control.attr('data-value');\n\n        var document = iframe.contents().get(0);\n        document.open();\n        document.write(htmlDocument);\n        document.close();\n\n        viewMoreButton.on('click', function () {\n            Dms.controls.showContentDialog('Preview', htmlDocument, true);\n        });\n    });\n});","Dms.table.initializeCallbacks.push(function (element) {\n    var groupCounter = 0;\n\n    element.find('.dms-table-body-sortable').each(function () {\n        var tableBody = $(this);\n        var table = tableBody.closest('.dms-table');\n        var control = tableBody.closest('.dms-table-control');\n        var reorderRowsUrl = control.attr('data-reorder-row-action-url');\n\n        var performReorder = function (event) {\n            var newIndex = typeof event.newIndex === 'undefined' ? event.oldIndex : event.newIndex;\n\n            var criteria = control.data('dms-table-criteria');\n            var row = $(event.item);\n            var objectId = row.find('.dms-row-action-column').attr('data-object-id');\n            var reorderButtonHandle = row.find('.dms-drag-handle');\n\n            var reorderRequest = Dms.ajax.createRequest({\n                url: reorderRowsUrl,\n                type: 'post',\n                dataType: 'html',\n                data: {\n                    object: objectId,\n                    index: criteria.offset + newIndex + 1\n                }\n            });\n\n            if (reorderButtonHandle.is('button')) {\n                reorderButtonHandle.addClass('ladda-button').attr('data-style', 'expand-right');\n                var ladda = Ladda.create(reorderButtonHandle.get(0));\n                ladda.start();\n\n                reorderRequest.always(ladda.stop);\n            }\n\n            reorderRequest.done(function () {\n                table.triggerHandler('dms-load-table-data');\n            });\n\n            reorderRequest.fail(function (response) {\n                Dms.controls.showErrorDialog({\n                    title: \"Could not reorder item\",\n                    text: \"An unexpected error occurred\",\n                    type: \"error\",\n                    debugInfo: response.responseText\n                });\n            });\n        };\n\n        var sortable = new Sortable(tableBody.get(0), {\n            group: \"sortable-group\" + groupCounter++,\n            sort: true,  // sorting inside list\n            animation: 150,  // ms, animation speed moving items when sorting, `0` — without animation\n            handle: \".dms-drag-handle\",  // Drag handle selector within list items\n            draggable: \"tr\",  // Specifies which items inside the element should be sortable\n            ghostClass: \"sortable-ghost\",  // Class name for the drop placeholder\n            chosenClass: \"sortable-chosen\",  // Class name for the chosen item\n            dataIdAttr: 'data-id',\n\n            onEnd: performReorder\n\n        });\n    });\n});","Dms.table.initializeCallbacks.push(function (element) {\n\n    element.find('.dms-table-control').each(function () {\n        var control = $(this);\n        var tableContainer = control.find('.dms-table-container');\n        var table = tableContainer.find('table.dms-table');\n        var filterForm = control.find('.dms-table-quick-filter-form');\n        var rowsPerPageSelect = control.find('.dms-table-rows-per-page-form select');\n        var paginationPreviousButton = control.find('.dms-table-pagination .dms-pagination-previous');\n        var paginationNextButton = control.find('.dms-table-pagination .dms-pagination-next');\n        var loadRowsUrl = control.attr('data-load-rows-url');\n        var stringFilterableComponentIds = JSON.parse(control.attr('data-string-filterable-component-ids')) || [];\n\n        var currentPage = 0;\n\n        var criteria = {\n            orderings: [],\n            condition_mode: 'or',\n            conditions: [],\n            offset: 0,\n            max_rows: rowsPerPageSelect.val()\n        };\n\n        var currentAjaxRequest;\n\n        var loadCurrentPage = function () {\n            if (currentAjaxRequest) {\n                currentAjaxRequest.abort();\n            }\n\n            tableContainer.addClass('loading');\n\n            criteria.offset = currentPage * criteria.max_rows;\n\n            currentAjaxRequest = Dms.ajax.createRequest({\n                url: loadRowsUrl,\n                type: 'post',\n                dataType: 'html',\n                data: criteria\n            });\n\n            currentAjaxRequest.done(function (tableData) {\n                table.empty().append($(tableData).children());\n                Dms.table.initialize(table);\n                Dms.form.initialize(table);\n\n                control.data('dms-table-criteria', criteria);\n                control.attr('data-has-loaded-table-data', true);\n\n                if (table.find('tbody tr').length < criteria.max_rows) {\n                    paginationNextButton.addClass('disabled');\n                }\n\n                renderOrderState();\n            });\n\n            currentAjaxRequest.fail(function (response) {\n                if (currentAjaxRequest.statusText === 'abort') {\n                    return;\n                }\n\n                tableContainer.addClass('has-error');\n\n                Dms.controls.showErrorDialog({\n                    title: \"Could not load table data\",\n                    text: \"An unexpected error occurred\",\n                    type: \"error\",\n                    debugInfo: response.responseText\n                });\n            });\n\n            currentAjaxRequest.always(function () {\n                tableContainer.removeClass('loading');\n            });\n        };\n\n        var renderOrderState = function () {\n            var orderByComponent = criteria.orderings.length ? criteria.orderings[0].component : null;\n            var orderDirection = criteria.orderings.length ? criteria.orderings[0].direction : null;\n\n            filterForm.find('[name=component]').val(orderByComponent || '');\n            filterForm.find('[name=direction]').val(orderDirection || 'asc');\n\n            table.find('th[data-order]').removeClass('dms-ordered-asc').removeClass('dms-ordered-desc');\n            table.find('th[data-order=\"' + orderByComponent + '\"]').addClass('dms-ordered-' + orderDirection);\n        };\n\n        filterForm.find('[name=component], [name=direction]').on('change', function () {\n            var orderByComponent = filterForm.find('[name=component]').val();\n\n            if (orderByComponent) {\n                criteria.orderings = [\n                    {\n                        component: orderByComponent,\n                        direction: filterForm.find('[name=direction]').val()\n                    }\n                ];\n            } else {\n                criteria.orderings = [];\n            }\n\n            renderOrderState();\n            loadCurrentPage();\n        });\n\n        table.on('click', 'th[data-order]', function () {\n            criteria.orderings = [\n                {\n                    component: $(this).attr('data-order'),\n                    direction: $(this).hasClass('dms-ordered-asc') ? 'desc' : 'asc'\n                }\n            ];\n\n            renderOrderState();\n            loadCurrentPage();\n        });\n\n        filterForm.find('button').click(function () {\n\n            criteria.conditions = [];\n\n            var filterByString = filterForm.find('[name=filter]').val();\n\n            if (filterByString) {\n                $.each(filterByString.split(' '), function (stringIndex, filterByPart) {\n                    $.each(stringFilterableComponentIds, function (index, componentId) {\n                        criteria.conditions.push({\n                            component: componentId,\n                            operator: 'string-contains-case-insensitive',\n                            value: filterByString\n                        });\n                    });\n                });\n            }\n\n            loadCurrentPage();\n        });\n\n        filterForm.find('input[name=filter]').on('keyup', function (event) {\n            var enterKey = 13;\n\n            if (event.keyCode === enterKey) {\n                filterForm.find('button').click();\n            }\n        });\n\n        rowsPerPageSelect.on('change', function () {\n            criteria.max_rows = $(this).val();\n\n            loadCurrentPage();\n        });\n\n        paginationPreviousButton.click(function () {\n            currentPage--;\n            paginationNextButton.removeClass('disabled');\n            paginationPreviousButton.toggleClass('disabled', currentPage === 0);\n            loadCurrentPage();\n        });\n\n        paginationNextButton.click(function () {\n            currentPage++;\n            paginationPreviousButton.removeClass('disabled');\n            loadCurrentPage();\n        });\n\n        paginationPreviousButton.addClass('disabled');\n\n        if (table.is(':visible')) {\n            loadCurrentPage();\n        }\n\n        table.on('dms-load-table-data', loadCurrentPage);\n    });\n\n    $('.dms-table-tabs').each(function () {\n        var tabs = $(this);\n\n        tabs.find('.dms-table-tab-show-button').on('click', function () {\n            var linkedTablePane = $($(this).attr('href'));\n\n            linkedTablePane.find('.dms-table-control:not([data-has-loaded-table-data]) .dms-table-container:not(.loading) .dms-table').triggerHandler('dms-load-table-data');\n        });\n    });\n});","Dms.widget.initializeCallbacks.push(function () {\n    $('.dms-widget-unparameterized-action, .dms-widget-parameterized-action').each(function () {\n        var widget = $(this);\n        var button = widget.find('button');\n\n        if (button.is('.btn-danger')) {\n            var isConfirmed = false;\n\n            button.click(function () {\n                if (isConfirmed) {\n                    isConfirmed = false;\n                    return;\n                }\n\n                swal({\n                    title: \"Are you sure?\",\n                    text: \"This will execute the '\" + widget.attr('data-action-label') + \"' action\",\n                    type: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#DD6B55\",\n                    confirmButtonText: \"Yes proceed!\"\n                }, function () {\n                    isConfirmed = true;\n                    $(this).click();\n                });\n\n                return false;\n            });\n        }\n    });\n});","Dms.table.initializeCallbacks.push(function (element) {\n    element.find('.dms-file-tree').each(function () {\n        var fileTree = $(this);\n        var allFileTrees = fileTree.find('.dms-file-tree-data');\n        var fileTreeData = fileTree.find('.dms-file-tree-data.dms-file-tree-data-active');\n        var trashedFileTreeData = fileTree.find('.dms-file-tree-data.dms-file-tree-data-trash');\n        var filterForm = fileTree.find('.dms-quick-filter-form');\n        var reloadFileTreeUrl = fileTree.attr('data-reload-file-tree-url');\n\n        var initializeFileTreeData = function (fileTreeData) {\n            var folderItems = fileTreeData.find('.dms-folder-item');\n            var fileItems = fileTreeData.find('.dms-file-item');\n\n            fileTree.find('.dms-folder-item').on('click', function (e) {\n                if ($(e.target).is('.dms-file-item, .dms-file-item *')) {\n                    return;\n                }\n\n                e.stopImmediatePropagation();\n                $(this).toggleClass('dms-folder-closed');\n            });\n\n            filterForm.find('input[name=filter]').on('change input', function () {\n                var filterBy = $(this).val();\n\n                folderItems.hide().addClass('.dms-folder-closed');\n                fileItems.each(function (index, fileItem) {\n                    fileItem = $(fileItem);\n                    var label = fileItem.text();\n\n                    var doesContainFilter = label.toLowerCase().indexOf(filterBy.toLowerCase()) !== -1;\n                    fileItem.toggleClass('hidden', !doesContainFilter || fileItem.hasClass('hidden-file-item'));\n\n                    if (doesContainFilter) {\n                        fileItem.parents('.dms-folder-item').removeClass('dms-folder-closed').show();\n                    }\n                });\n\n                hideEmptyFolders(fileTreeData);\n            });\n\n            hideEmptyFolders(fileTreeData);\n        };\n\n        var hideEmptyFolders = function (fileTreeData) {\n            fileTreeData.find('.dms-folder-item').each(function () {\n                $(this).toggle($(this).find('.dms-file-item:not(.hidden)').length > 0);\n            });\n        };\n\n        element.find('.dms-upload-form .dms-staged-form').on('dms-post-submit-success', function () {\n            var fileTreeContainer = fileTree.find('.dms-file-tree-data-container');\n\n            var request = Dms.ajax.createRequest({\n                url: reloadFileTreeUrl,\n                type: 'get',\n                dataType: 'html',\n                data: {'__content_only': '1'}\n            });\n\n            fileTreeContainer.addClass('loading');\n\n            request.done(function (html) {\n                var newFileTrees = $(html).find('.dms-file-tree-data');\n                var newActiveFileTree = newFileTrees.filter('.dms-file-tree-data-active');\n                fileTreeData.replaceWith(newActiveFileTree);\n                var newTrashedFileTree = newFileTrees.filter('.dms-file-tree-data-trashed');\n                trashedFileTreeData.replaceWith(newTrashedFileTree);\n                initializeFileTreeData(newActiveFileTree.parent());\n                initializeFileTreeData(newTrashedFileTree.parent());\n\n                Dms.form.initialize(newActiveFileTree.parent());\n                Dms.form.initialize(newTrashedFileTree.parent());\n\n                allFileTrees = newFileTrees;\n                fileTreeData = newActiveFileTree;\n                trashedFileTreeData = newTrashedFileTree;\n\n                fileTree.triggerHandler('dms-file-tree-updated');\n            });\n\n            request.always(function () {\n                fileTreeContainer.removeClass('loading');\n            });\n        });\n\n        fileTree.find('.btn-images-only').on('click', function () {\n            allFileTrees.find('.dms-file-item:not(.dms-image-item)').addClass('hidden').addClass('hidden-file-item');\n            hideEmptyFolders(allFileTrees);\n        });\n\n        fileTree.find('.btn-all-files').on('click', function () {\n            allFileTrees.find('.dms-file-item').removeClass('hidden').removeClass('hidden-file-item');\n            hideEmptyFolders(allFileTrees);\n        });\n\n        fileTree.find('.btn-trashed-files').on('click', function () {\n            fileTreeData.toggleClass('hidden');\n            trashedFileTreeData.toggleClass('hidden');\n        });\n\n        fileTree.find('.btn-group > .btn').click(function(){\n            $(this).addClass('active').siblings().removeClass('active');\n        });\n\n        allFileTrees.each(function () {\n            initializeFileTreeData($(this));\n        });\n    });\n});\n"]}